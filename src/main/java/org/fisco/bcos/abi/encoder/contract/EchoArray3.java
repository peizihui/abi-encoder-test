package org.fisco.bcos.abi.encoder.contract;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.Bool;
import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class EchoArray3 extends Contract {
	public static final String ABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_i\",\"type\":\"int256[3]\"}],\"name\":\"setInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bool[3]\"}],\"name\":\"setBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bytes[3]\"}],\"name\":\"setBS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_u\",\"type\":\"uint256[3]\"},{\"name\":\"_i\",\"type\":\"int256[3]\"},{\"name\":\"_b\",\"type\":\"bool[3]\"},{\"name\":\"_addr\",\"type\":\"address[3]\"},{\"name\":\"_bs32\",\"type\":\"bytes32[3]\"},{\"name\":\"_s\",\"type\":\"string[3]\"},{\"name\":\"_bs\",\"type\":\"bytes[3]\"}],\"name\":\"set\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"},{\"name\":\"\",\"type\":\"int256[3]\"},{\"name\":\"\",\"type\":\"bool[3]\"},{\"name\":\"\",\"type\":\"address[3]\"},{\"name\":\"\",\"type\":\"bytes32[3]\"},{\"name\":\"\",\"type\":\"string[3]\"},{\"name\":\"\",\"type\":\"bytes[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address[3]\"}],\"name\":\"setAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"},{\"name\":\"\",\"type\":\"int256[3]\"},{\"name\":\"\",\"type\":\"bool[3]\"},{\"name\":\"\",\"type\":\"address[3]\"},{\"name\":\"\",\"type\":\"bytes32[3]\"},{\"name\":\"\",\"type\":\"string[3]\"},{\"name\":\"\",\"type\":\"bytes[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBS32\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getString\",\"outputs\":[{\"name\":\"\",\"type\":\"string[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address[3]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_s\",\"type\":\"string[3]\"}],\"name\":\"setString\",\"outputs\":[{\"name\":\"\",\"type\":\"string[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_u\",\"type\":\"uint256[3]\"}],\"name\":\"setUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bytes32[3]\"}],\"name\":\"setBS32\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[3]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"u\",\"type\":\"uint256[3]\"}],\"name\":\"EventUint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"i\",\"type\":\"int256[3]\"}],\"name\":\"EventInt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_b\",\"type\":\"bool[3]\"}],\"name\":\"EventBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address[3]\"}],\"name\":\"EventAddr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bytes32[3]\"}],\"name\":\"EventB32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string[3]\"}],\"name\":\"EventString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bytes[3]\"}],\"name\":\"EventBS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_u\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"name\":\"_i\",\"type\":\"int256[3]\"},{\"indexed\":false,\"name\":\"_b\",\"type\":\"bool[3]\"},{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address[3]\"},{\"indexed\":false,\"name\":\"_bs32\",\"type\":\"bytes32[3]\"},{\"indexed\":false,\"name\":\"_s\",\"type\":\"string[3]\"},{\"indexed\":false,\"name\":\"_bs\",\"type\":\"bytes[3]\"}],\"name\":\"Event\",\"type\":\"event\"}]";
    private static final String BINARY = "608060405234801561001057600080fd5b506129d2806100206000396000f3006080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680620267a4146100ea57806312a7b914146101155780631e376cd11461014057806325f233a51461017d5780632dd4150f146101a857806356dfa548146101e557806359bbaa08146102225780636273899814610265578063655becb2146102905780636d4ce63c146102cd578063839ebdfd146102fe57806389ea642f14610329578063a74c2bb614610354578063a96b9e041461037f578063b3d44050146103bc578063e9237007146103f9575b600080fd5b3480156100f657600080fd5b506100ff610436565b60405161010c919061259d565b60405180910390f35b34801561012157600080fd5b5061012a610481565b6040516101379190612508565b60405180910390f35b34801561014c57600080fd5b506101676004803603610162919081019061208f565b6104f1565b6040516101749190612560565b60405180910390f35b34801561018957600080fd5b50610192610586565b60405161019f919061253e565b60405180910390f35b3480156101b457600080fd5b506101cf60048036036101ca9190810190611ffc565b610663565b6040516101dc9190612508565b60405180910390f35b3480156101f157600080fd5b5061020c6004803603610207919081019061204e565b61071e565b604051610219919061253e565b60405180910390f35b34801561022e57600080fd5b5061024960048036036102449190810190612122565b610846565b60405161025c97969594939291906125b8565b60405180910390f35b34801561027157600080fd5b5061027a610ca8565b6040516102879190612560565b60405180910390f35b34801561029c57600080fd5b506102b760048036036102b29190810190611fd3565b610cf2565b6040516102c491906124ed565b60405180910390f35b3480156102d957600080fd5b506102e2610dbe565b6040516102f597969594939291906125b8565b60405180910390f35b34801561030a57600080fd5b50610313611157565b6040516103209190612523565b60405180910390f35b34801561033557600080fd5b5061033e6111a6565b60405161034b919061257b565b60405180910390f35b34801561036057600080fd5b50610369611283565b60405161037691906124ed565b60405180910390f35b34801561038b57600080fd5b506103a660048036036103a191908101906120b8565b611304565b6040516103b3919061257b565b60405180910390f35b3480156103c857600080fd5b506103e360048036036103de91908101906120f9565b61142c565b6040516103f0919061259d565b60405180910390f35b34801561040557600080fd5b50610420600480360361041b9190810190612025565b6114c2565b60405161042d9190612523565b60405180910390f35b61043e61155c565b6000600380602002604051908101604052809291908260038015610477576020028201915b815481526020019060010190808311610463575b5050505050905090565b61048961157f565b60066003806020026040519081016040528092919082600380156104e7576020028201916000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116104b15790505b5050505050905090565b6104f96115a2565b81600390600361050a9291906115c5565b507f385b653030828abf00404d959a34b620eaa27aefc622efa9f1299e082513c13f8260405161053a9190612560565b60405180910390a16003808060200260405190810160405280929190826003801561057a576020028201915b815481526020019060010190808311610566575b50505050509050919050565b61058e611605565b6010600380602002604051908101604052809291906000905b8282101561065a578382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b5050505050815260200190600101906105a7565b50505050905090565b61066b61157f565b81600690600361067c92919061162d565b507fb12d5bcec6e066d1862b27275a65e3bb7a469826444217d67fbc1c4f410e0a8b826040516106ac9190612508565b60405180910390a16006600380602002604051908101604052809291908260038015610712576020028201916000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116106dc5790505b50505050509050919050565b610726611605565b8160109060036107379291906116c6565b507f61e31513c8ea5b37e10126b6d238f001d3944b5d201b709d52c87808d214f23a82604051610767919061253e565b60405180910390a16010600380602002604051908101604052809291906000905b8282101561083b578382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b505050505081526020019060010190610788565b505050509050919050565b61084e61155c565b6108566115a2565b61085e61157f565b610866611719565b61086e61173c565b61087661175f565b61087e611605565b7f39482f65c644915801180f94904b0357e572e430972abcd7bc8393038a30c55a8e8e8e8e8e8e8e6040516108b997969594939291906125b8565b60405180910390a18d60009060036108d2929190611787565b508c60039060036108e49291906115c5565b508b60069060036108f692919061162d565b508a60079060036109089291906117c7565b5089600a90600361091a929190611844565b5088600d90600361092c92919061188a565b5087601090600361093e9291906116c6565b506000600360066007600a600d601086600380602002604051908101604052809291908260038015610985576020028201915b815481526020019060010190808311610971575b50505050509650856003806020026040519081016040528092919082600380156109c4576020028201915b8154815260200190600101908083116109b0575b5050505050955084600380602002604051908101604052809291908260038015610a28576020028201916000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116109f25790505b5050505050945083600380602002604051908101604052809291908260038015610a9d576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a53575b5050505050935082600380602002604051908101604052809291908260038015610ae0576020028201915b81546000191681526020019060010190808311610ac8575b5050505050925081600380602002604051908101604052809291906000905b82821015610bb2578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b9e5780601f10610b7357610100808354040283529160200191610b9e565b820191906000526020600020905b815481529060010190602001808311610b8157829003601f168201915b505050505081526020019060010190610aff565b50505050915080600380602002604051908101604052809291906000905b82821015610c83578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c6f5780601f10610c4457610100808354040283529160200191610c6f565b820191906000526020600020905b815481529060010190602001808311610c5257829003601f168201915b505050505081526020019060010190610bd0565b5050505090509650965096509650965096509650975097509750975097509750979050565b610cb06115a2565b60038080602002604051908101604052809291908260038015610ce8576020028201915b815481526020019060010190808311610cd4575b5050505050905090565b610cfa611719565b816007906003610d0b9291906117c7565b507f0204942a55eb4d28e562f93e974896eeb0d4c7704483f4f1e718a0e564911c2282604051610d3b91906124ed565b60405180910390a16007600380602002604051908101604052809291908260038015610db2576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d68575b50505050509050919050565b610dc661155c565b610dce6115a2565b610dd661157f565b610dde611719565b610de661173c565b610dee61175f565b610df6611605565b6000600360066007600a600d601086600380602002604051908101604052809291908260038015610e3c576020028201915b815481526020019060010190808311610e28575b5050505050965085600380602002604051908101604052809291908260038015610e7b576020028201915b815481526020019060010190808311610e67575b5050505050955084600380602002604051908101604052809291908260038015610edf576020028201916000905b82829054906101000a900460ff16151581526020019060010190602082600001049283019260010382029150808411610ea95790505b5050505050945083600380602002604051908101604052809291908260038015610f54576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f0a575b5050505050935082600380602002604051908101604052809291908260038015610f97576020028201915b81546000191681526020019060010190808311610f7f575b5050505050925081600380602002604051908101604052809291906000905b82821015611069578382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110555780601f1061102a57610100808354040283529160200191611055565b820191906000526020600020905b81548152906001019060200180831161103857829003601f168201915b505050505081526020019060010190610fb6565b50505050915080600380602002604051908101604052809291906000905b8282101561113a578382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111265780601f106110fb57610100808354040283529160200191611126565b820191906000526020600020905b81548152906001019060200180831161110957829003601f168201915b505050505081526020019060010190611087565b505050509050965096509650965096509650965090919293949596565b61115f61173c565b600a60038060200260405190810160405280929190826003801561119c576020028201915b81546000191681526020019060010190808311611184575b5050505050905090565b6111ae61175f565b600d600380602002604051908101604052809291906000905b8282101561127a578382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112665780601f1061123b57610100808354040283529160200191611266565b820191906000526020600020905b81548152906001019060200180831161124957829003601f168201915b5050505050815260200190600101906111c7565b50505050905090565b61128b611719565b60076003806020026040519081016040528092919082600380156112fa576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112b0575b5050505050905090565b61130c61175f565b81600d90600361131d92919061188a565b507f08060fce4ec5f53c788e8c0173b4c9433eb6e1d356e7cbef608b4b38b27439088260405161134d919061257b565b60405180910390a1600d600380602002604051908101604052809291906000905b82821015611421578382018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561140d5780601f106113e25761010080835404028352916020019161140d565b820191906000526020600020905b8154815290600101906020018083116113f057829003601f168201915b50505050508152602001906001019061136e565b505050509050919050565b61143461155c565b816000906003611445929190611787565b507f094a1f4d28a8b4d576b700674f52407be47bde430e0f3844199d28d3a453be3282604051611475919061259d565b60405180910390a160006003806020026040519081016040528092919082600380156114b6576020028201915b8154815260200190600101908083116114a2575b50505050509050919050565b6114ca61173c565b81600a9060036114db929190611844565b507fb3174dddc339a75084d2e99cea33f9491d15baf143623d01d7f3614f32aa23a58260405161150b9190612523565b60405180910390a1600a600380602002604051908101604052809291908260038015611550576020028201915b81546000191681526020019060010190808311611538575b50505050509050919050565b606060405190810160405280600390602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b82600381019282156115f4579160200282015b828111156115f35782518255916020019190600101906115d8565b5b50905061160191906118dd565b5090565b6060604051908101604052806003905b60608152602001906001900390816116155790505090565b826003601f016020900481019282156116b55791602002820160005b8382111561168657835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302611649565b80156116b35782816101000a81549060ff0219169055600101602081600001049283019260010302611686565b505b5090506116c29190611902565b5090565b8260038101928215611708579160200282015b828111156117075782518290805190602001906116f7929190611932565b50916020019190600101906116d9565b5b50905061171591906119b2565b5090565b606060405190810160405280600390602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b6060604051908101604052806003905b606081526020019060019003908161176f5790505090565b82600381019282156117b6579160200282015b828111156117b557825182559160200191906001019061179a565b5b5090506117c391906119de565b5090565b8260038101928215611833579160200282015b828111156118325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906117da565b5b5090506118409190611a03565b5090565b8260038101928215611879579160200282015b82811115611878578251829060001916905591602001919060010190611857565b5b5090506118869190611a46565b5090565b82600381019282156118cc579160200282015b828111156118cb5782518290805190602001906118bb929190611a6b565b509160200191906001019061189d565b5b5090506118d99190611aeb565b5090565b6118ff91905b808211156118fb5760008160009055506001016118e3565b5090565b90565b61192f91905b8082111561192b57600081816101000a81549060ff021916905550600101611908565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061197357805160ff19168380011785556119a1565b828001600101855582156119a1579182015b828111156119a0578251825591602001919060010190611985565b5b5090506119ae91906119de565b5090565b6119db91905b808211156119d757600081816119ce9190611b17565b506001016119b8565b5090565b90565b611a0091905b808211156119fc5760008160009055506001016119e4565b5090565b90565b611a4391905b80821115611a3f57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611a09565b5090565b90565b611a6891905b80821115611a64576000816000905550600101611a4c565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611aac57805160ff1916838001178555611ada565b82800160010185558215611ada579182015b82811115611ad9578251825591602001919060010190611abe565b5b509050611ae791906119de565b5090565b611b1491905b80821115611b105760008181611b079190611b5f565b50600101611af1565b5090565b90565b50805460018160011615610100020316600290046000825580601f10611b3d5750611b5c565b601f016020900490600052602060002090810190611b5b91906119de565b5b50565b50805460018160011615610100020316600290046000825580601f10611b855750611ba4565b601f016020900490600052602060002090810190611ba391906119de565b5b50565b6000611bb382356128fb565b905092915050565b600082601f8301121515611bce57600080fd5b6003611be1611bdc82612667565b61263a565b91508183856020840282011115611bf757600080fd5b60005b83811015611c275781611c0d8882611ba7565b845260208401935060208301925050600181019050611bfa565b5050505092915050565b600082601f8301121515611c4457600080fd5b6003611c57611c5282612689565b61263a565b91508183856020840282011115611c6d57600080fd5b60005b83811015611c9d5781611c838882611ed7565b845260208401935060208301925050600181019050611c70565b5050505092915050565b600082601f8301121515611cba57600080fd5b6003611ccd611cc8826126ab565b61263a565b91508183856020840282011115611ce357600080fd5b60005b83811015611d135781611cf98882611eeb565b845260208401935060208301925050600181019050611ce6565b5050505092915050565b600082601f8301121515611d3057600080fd5b6003611d43611d3e826126cd565b61263a565b9150818360005b83811015611d7a5781358601611d608882611eff565b845260208401935060208301925050600181019050611d4a565b5050505092915050565b600082601f8301121515611d9757600080fd5b6003611daa611da5826126ef565b61263a565b91508183856020840282011115611dc057600080fd5b60005b83811015611df05781611dd68882611f55565b845260208401935060208301925050600181019050611dc3565b5050505092915050565b600082601f8301121515611e0d57600080fd5b6003611e20611e1b82612711565b61263a565b9150818360005b83811015611e575781358601611e3d8882611f69565b845260208401935060208301925050600181019050611e27565b5050505092915050565b600082601f8301121515611e7457600080fd5b6003611e87611e8282612733565b61263a565b91508183856020840282011115611e9d57600080fd5b60005b83811015611ecd5781611eb38882611fbf565b845260208401935060208301925050600181019050611ea0565b5050505092915050565b6000611ee3823561291b565b905092915050565b6000611ef78235612927565b905092915050565b600082601f8301121515611f1257600080fd5b8135611f25611f2082612755565b61263a565b91508082526020830160208301858383011115611f4157600080fd5b611f4c838284612945565b50505092915050565b6000611f618235612931565b905092915050565b600082601f8301121515611f7c57600080fd5b8135611f8f611f8a82612781565b61263a565b91508082526020830160208301858383011115611fab57600080fd5b611fb6838284612945565b50505092915050565b6000611fcb823561293b565b905092915050565b600060608284031215611fe557600080fd5b6000611ff384828501611bbb565b91505092915050565b60006060828403121561200e57600080fd5b600061201c84828501611c31565b91505092915050565b60006060828403121561203757600080fd5b600061204584828501611ca7565b91505092915050565b60006020828403121561206057600080fd5b600082013567ffffffffffffffff81111561207a57600080fd5b61208684828501611d1d565b91505092915050565b6000606082840312156120a157600080fd5b60006120af84828501611d84565b91505092915050565b6000602082840312156120ca57600080fd5b600082013567ffffffffffffffff8111156120e457600080fd5b6120f084828501611dfa565b91505092915050565b60006060828403121561210b57600080fd5b600061211984828501611e61565b91505092915050565b6000806000806000806000610220888a03121561213e57600080fd5b600061214c8a828b01611e61565b975050606061215d8a828b01611d84565b96505060c061216e8a828b01611c31565b9550506101206121808a828b01611bbb565b9450506101806121928a828b01611ca7565b9350506101e088013567ffffffffffffffff8111156121b057600080fd5b6121bc8a828b01611dfa565b92505061020088013567ffffffffffffffff8111156121da57600080fd5b6121e68a828b01611d1d565b91505092959891949750929550565b6121fe816128b1565b82525050565b61220d816127f3565b612216826127ad565b60005b828110156122485761222c8583516121f5565b61223582612856565b9150602085019450600181019050612219565b5050505050565b612258816127fe565b612261826127b7565b60005b8281101561229357612277858351612445565b61228082612863565b9150602085019450600181019050612264565b5050505050565b6122a381612809565b6122ac826127c1565b60005b828110156122de576122c2858351612454565b6122cb82612870565b91506020850194506001810190506122af565b5050505050565b60006122f082612814565b83602082028501612300856127cb565b60005b8481101561233957838303885261231b838351612463565b92506123268261287d565b9150602088019750600181019050612303565b508196508694505050505092915050565b6123538161281f565b61235c826127d5565b60005b8281101561238e57612372858351612499565b61237b8261288a565b915060208501945060018101905061235f565b5050505050565b60006123a08261282a565b836020820285016123b0856127df565b60005b848110156123e95783830388526123cb8383516124a8565b92506123d682612897565b91506020880197506001810190506123b3565b508196508694505050505092915050565b61240381612835565b61240c826127e9565b60005b8281101561243e576124228583516124de565b61242b826128a4565b915060208501945060018101905061240f565b5050505050565b61244e816128d1565b82525050565b61245d816128dd565b82525050565b600061246e82612840565b808452612482816020860160208601612954565b61248b81612987565b602085010191505092915050565b6124a2816128e7565b82525050565b60006124b38261284b565b8084526124c7816020860160208601612954565b6124d081612987565b602085010191505092915050565b6124e7816128f1565b82525050565b60006060820190506125026000830184612204565b92915050565b600060608201905061251d600083018461224f565b92915050565b6000606082019050612538600083018461229a565b92915050565b6000602082019050818103600083015261255881846122e5565b905092915050565b6000606082019050612575600083018461234a565b92915050565b600060208201905081810360008301526125958184612395565b905092915050565b60006060820190506125b260008301846123fa565b92915050565b6000610220820190506125ce600083018a6123fa565b6125db606083018961234a565b6125e860c083018861224f565b6125f6610120830187612204565b61260461018083018661229a565b8181036101e08301526126178185612395565b905081810361020083015261262c81846122e5565b905098975050505050505050565b6000604051905081810181811067ffffffffffffffff8211171561265d57600080fd5b8060405250919050565b600067ffffffffffffffff82111561267e57600080fd5b602082029050919050565b600067ffffffffffffffff8211156126a057600080fd5b602082029050919050565b600067ffffffffffffffff8211156126c257600080fd5b602082029050919050565b600067ffffffffffffffff8211156126e457600080fd5b602082029050919050565b600067ffffffffffffffff82111561270657600080fd5b602082029050919050565b600067ffffffffffffffff82111561272857600080fd5b602082029050919050565b600067ffffffffffffffff82111561274a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561276c57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561279857600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612972578082015181840152602081019050612957565b83811115612981576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820825c7c52c1eeda45a6c507d235fb916d6231a8ef137ecb8e611a4dc14c2cd1d76c6578706572696d656e74616cf50037";

    public static final String FUNC_GETUINT = "getUint";

    public static final String FUNC_GETBOOL = "getBool";

    public static final String FUNC_SETINT = "setInt";

    public static final String FUNC_GETBS = "getBS";

    public static final String FUNC_SETBOOL = "setBool";

    public static final String FUNC_SETBS = "setBS";

    public static final String FUNC_SET = "set";

    public static final String FUNC_GETINT = "getInt";

    public static final String FUNC_SETADDR = "setAddr";

    public static final String FUNC_GET = "get";

    public static final String FUNC_GETBS32 = "getBS32";

    public static final String FUNC_GETSTRING = "getString";

    public static final String FUNC_GETADDR = "getAddr";

    public static final String FUNC_SETSTRING = "setString";

    public static final String FUNC_SETUINT = "setUint";

    public static final String FUNC_SETBS32 = "setBS32";

    public static final Event EVENTUINT_EVENT = new Event("EventUint", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Uint256>>() {}));
    ;

    public static final Event EVENTINT_EVENT = new Event("EventInt", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Int256>>() {}));
    ;

    public static final Event EVENTBOOL_EVENT = new Event("EventBool", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Bool>>() {}));
    ;

    public static final Event EVENTADDR_EVENT = new Event("EventAddr", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Address>>() {}));
    ;

    public static final Event EVENTB32_EVENT = new Event("EventB32", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Bytes32>>() {}));
    ;

    public static final Event EVENTSTRING_EVENT = new Event("EventString", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Utf8String>>() {}));
    ;

    public static final Event EVENTBS_EVENT = new Event("EventBS", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<DynamicBytes>>() {}));
    ;

    public static final Event EVENT_EVENT = new Event("Event", 
            Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Uint256>>() {}, new TypeReference<StaticArray3<Int256>>() {}, new TypeReference<StaticArray3<Bool>>() {}, new TypeReference<StaticArray3<Address>>() {}, new TypeReference<StaticArray3<Bytes32>>() {}, new TypeReference<StaticArray3<Utf8String>>() {}, new TypeReference<StaticArray3<DynamicBytes>>() {}));
    ;

    @Deprecated
    protected EchoArray3(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected EchoArray3(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected EchoArray3(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected EchoArray3(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<List> getUint() {
        final Function function = new Function(FUNC_GETUINT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Uint256>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getBool() {
        final Function function = new Function(FUNC_GETBOOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Bool>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setInt(List<BigInteger> _i) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Int256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setInt(List<BigInteger> _i, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Int256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<List> getBS() {
        final Function function = new Function(FUNC_GETBS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<DynamicBytes>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setBool(List<Boolean> _b) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Bool>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBool(List<Boolean> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Bool>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<TransactionReceipt> setBS(List<byte[]> _b) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.DynamicBytes>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBS(List<byte[]> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.DynamicBytes>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<TransactionReceipt> set(List<BigInteger> _u, List<BigInteger> _i, List<Boolean> _b, List<String> _addr, List<byte[]> _bs32, List<String> _s, List<byte[]> _bs) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Uint256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Int256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Bool>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.DynamicBytes>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void set(List<BigInteger> _u, List<BigInteger> _i, List<Boolean> _b, List<String> _addr, List<byte[]> _bs32, List<String> _s, List<byte[]> _bs, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Uint256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Int256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Bool>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.DynamicBytes>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<List> getInt() {
        final Function function = new Function(FUNC_GETINT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Int256>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setAddr(List<String> _addr) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setAddr(List<String> _addr, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Address>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<Tuple7<List<BigInteger>, List<BigInteger>, List<Boolean>, List<String>, List<byte[]>, List<String>, List<byte[]>>> get() {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Uint256>>() {}, new TypeReference<StaticArray3<Int256>>() {}, new TypeReference<StaticArray3<Bool>>() {}, new TypeReference<StaticArray3<Address>>() {}, new TypeReference<StaticArray3<Bytes32>>() {}, new TypeReference<StaticArray3<Utf8String>>() {}, new TypeReference<StaticArray3<DynamicBytes>>() {}));
        return new RemoteCall<Tuple7<List<BigInteger>, List<BigInteger>, List<Boolean>, List<String>, List<byte[]>, List<String>, List<byte[]>>>(
                new Callable<Tuple7<List<BigInteger>, List<BigInteger>, List<Boolean>, List<String>, List<byte[]>, List<String>, List<byte[]>>>() {
                    @Override
                    public Tuple7<List<BigInteger>, List<BigInteger>, List<Boolean>, List<String>, List<byte[]>, List<String>, List<byte[]>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<List<BigInteger>, List<BigInteger>, List<Boolean>, List<String>, List<byte[]>, List<String>, List<byte[]>>(
                                convertToNative((List<Uint256>) results.get(0).getValue()), 
                                convertToNative((List<Int256>) results.get(1).getValue()), 
                                convertToNative((List<Bool>) results.get(2).getValue()), 
                                convertToNative((List<Address>) results.get(3).getValue()), 
                                convertToNative((List<Bytes32>) results.get(4).getValue()), 
                                convertToNative((List<Utf8String>) results.get(5).getValue()), 
                                convertToNative((List<DynamicBytes>) results.get(6).getValue()));
                    }
                });
    }

    public RemoteCall<List> getBS32() {
        final Function function = new Function(FUNC_GETBS32, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getString() {
        final Function function = new Function(FUNC_GETSTRING, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Utf8String>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getAddr() {
        final Function function = new Function(FUNC_GETADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StaticArray3<Address>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setString(List<String> _s) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setString(List<String> _s, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.Utf8String>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<TransactionReceipt> setUint(List<BigInteger> _u) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Uint256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setUint(List<BigInteger> _u, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Uint256>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<TransactionReceipt> setBS32(List<byte[]> _b) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBS32(List<byte[]> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3<org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32>(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public List<EventUintEventResponse> getEventUintEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTUINT_EVENT, transactionReceipt);
        ArrayList<EventUintEventResponse> responses = new ArrayList<EventUintEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventUintEventResponse typedResponse = new EventUintEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.u = (List<BigInteger>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventUintEventResponse> eventUintEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventUintEventResponse>() {
            @Override
            public EventUintEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTUINT_EVENT, log);
                EventUintEventResponse typedResponse = new EventUintEventResponse();
                typedResponse.log = log;
                typedResponse.u = (List<BigInteger>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventUintEventResponse> eventUintEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTUINT_EVENT));
        return eventUintEventFlowable(filter);
    }

    public List<EventIntEventResponse> getEventIntEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTINT_EVENT, transactionReceipt);
        ArrayList<EventIntEventResponse> responses = new ArrayList<EventIntEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventIntEventResponse typedResponse = new EventIntEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.i = (List<BigInteger>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventIntEventResponse> eventIntEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventIntEventResponse>() {
            @Override
            public EventIntEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTINT_EVENT, log);
                EventIntEventResponse typedResponse = new EventIntEventResponse();
                typedResponse.log = log;
                typedResponse.i = (List<BigInteger>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventIntEventResponse> eventIntEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTINT_EVENT));
        return eventIntEventFlowable(filter);
    }

    public List<EventBoolEventResponse> getEventBoolEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTBOOL_EVENT, transactionReceipt);
        ArrayList<EventBoolEventResponse> responses = new ArrayList<EventBoolEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventBoolEventResponse typedResponse = new EventBoolEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._b = (List<Boolean>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventBoolEventResponse> eventBoolEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventBoolEventResponse>() {
            @Override
            public EventBoolEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTBOOL_EVENT, log);
                EventBoolEventResponse typedResponse = new EventBoolEventResponse();
                typedResponse.log = log;
                typedResponse._b = (List<Boolean>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventBoolEventResponse> eventBoolEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTBOOL_EVENT));
        return eventBoolEventFlowable(filter);
    }

    public List<EventAddrEventResponse> getEventAddrEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTADDR_EVENT, transactionReceipt);
        ArrayList<EventAddrEventResponse> responses = new ArrayList<EventAddrEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventAddrEventResponse typedResponse = new EventAddrEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventAddrEventResponse> eventAddrEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventAddrEventResponse>() {
            @Override
            public EventAddrEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTADDR_EVENT, log);
                EventAddrEventResponse typedResponse = new EventAddrEventResponse();
                typedResponse.log = log;
                typedResponse.addr = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventAddrEventResponse> eventAddrEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTADDR_EVENT));
        return eventAddrEventFlowable(filter);
    }

    public List<EventB32EventResponse> getEventB32Events(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTB32_EVENT, transactionReceipt);
        ArrayList<EventB32EventResponse> responses = new ArrayList<EventB32EventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventB32EventResponse typedResponse = new EventB32EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<byte[]>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventB32EventResponse> eventB32EventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventB32EventResponse>() {
            @Override
            public EventB32EventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTB32_EVENT, log);
                EventB32EventResponse typedResponse = new EventB32EventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<byte[]>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventB32EventResponse> eventB32EventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTB32_EVENT));
        return eventB32EventFlowable(filter);
    }

    public List<EventStringEventResponse> getEventStringEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTSTRING_EVENT, transactionReceipt);
        ArrayList<EventStringEventResponse> responses = new ArrayList<EventStringEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventStringEventResponse typedResponse = new EventStringEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.s = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventStringEventResponse> eventStringEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventStringEventResponse>() {
            @Override
            public EventStringEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTSTRING_EVENT, log);
                EventStringEventResponse typedResponse = new EventStringEventResponse();
                typedResponse.log = log;
                typedResponse.s = (List<String>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventStringEventResponse> eventStringEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTSTRING_EVENT));
        return eventStringEventFlowable(filter);
    }

    public List<EventBSEventResponse> getEventBSEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTBS_EVENT, transactionReceipt);
        ArrayList<EventBSEventResponse> responses = new ArrayList<EventBSEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventBSEventResponse typedResponse = new EventBSEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<byte[]>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventBSEventResponse> eventBSEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventBSEventResponse>() {
            @Override
            public EventBSEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTBS_EVENT, log);
                EventBSEventResponse typedResponse = new EventBSEventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<byte[]>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventBSEventResponse> eventBSEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTBS_EVENT));
        return eventBSEventFlowable(filter);
    }

    public List<EventEventResponse> getEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENT_EVENT, transactionReceipt);
        ArrayList<EventEventResponse> responses = new ArrayList<EventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventEventResponse typedResponse = new EventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._u = (List<BigInteger>) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._i = (List<BigInteger>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._b = (List<Boolean>) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._addr = (List<String>) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._bs32 = (List<byte[]>) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse._s = (List<String>) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse._bs = (List<byte[]>) eventValues.getNonIndexedValues().get(6).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventEventResponse> eventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventEventResponse>() {
            @Override
            public EventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENT_EVENT, log);
                EventEventResponse typedResponse = new EventEventResponse();
                typedResponse.log = log;
                typedResponse._u = (List<BigInteger>) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._i = (List<BigInteger>) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._b = (List<Boolean>) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._addr = (List<String>) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._bs32 = (List<byte[]>) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse._s = (List<String>) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse._bs = (List<byte[]>) eventValues.getNonIndexedValues().get(6).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventEventResponse> eventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENT_EVENT));
        return eventEventFlowable(filter);
    }

    @Deprecated
    public static EchoArray3 load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EchoArray3(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static EchoArray3 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EchoArray3(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static EchoArray3 load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new EchoArray3(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static EchoArray3 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new EchoArray3(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<EchoArray3> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EchoArray3.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EchoArray3> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EchoArray3.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<EchoArray3> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EchoArray3.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EchoArray3> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EchoArray3.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class EventUintEventResponse {
        public Log log;

        public List<BigInteger> u;
    }

    public static class EventIntEventResponse {
        public Log log;

        public List<BigInteger> i;
    }

    public static class EventBoolEventResponse {
        public Log log;

        public List<Boolean> _b;
    }

    public static class EventAddrEventResponse {
        public Log log;

        public List<String> addr;
    }

    public static class EventB32EventResponse {
        public Log log;

        public List<byte[]> b;
    }

    public static class EventStringEventResponse {
        public Log log;

        public List<String> s;
    }

    public static class EventBSEventResponse {
        public Log log;

        public List<byte[]> b;
    }

    public static class EventEventResponse {
        public Log log;

        public List<BigInteger> _u;

        public List<BigInteger> _i;

        public List<Boolean> _b;

        public List<String> _addr;

        public List<byte[]> _bs32;

        public List<String> _s;

        public List<byte[]> _bs;
    }
}
