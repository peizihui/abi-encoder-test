package org.fisco.bcos.abi.encoder.contract;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.Bool;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class EchoArray3Array extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50613302806100206000396000f3006080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680620267a4146100ea57806312a7b9141461011557806325f233a514610140578063627389981461016b57806366019163146101965780636d4ce63c146101bf578063755015af146101f0578063839ebdfd1461021957806389ea642f1461024457806392c296201461026f578063a74c2bb614610298578063e1b3d430146102c3578063e1badcd4146102ec578063f30e58ac14610315578063f437d66f1461033e578063fcb4b8ab14610367575b600080fd5b3480156100f657600080fd5b506100ff610390565b60405161010c9190612c8d565b60405180910390f35b34801561012157600080fd5b5061012a610420565b6040516101379190612be3565b60405180910390f35b34801561014c57600080fd5b506101556104d1565b6040516101629190612c27565b60405180910390f35b34801561017757600080fd5b506101806105f3565b60405161018d9190612c49565b60405180910390f35b3480156101a257600080fd5b506101bd60048036036101b891908101906124e0565b610683565b005b3480156101cb57600080fd5b506101d4610770565b6040516101e79796959493929190612caf565b60405180910390f35b3480156101fc57600080fd5b506102176004803603610212919081019061239b565b610ce5565b005b34801561022557600080fd5b5061022e610d36565b60405161023b9190612c05565b60405180910390f35b34801561025057600080fd5b50610259610dca565b6040516102669190612c6b565b60405180910390f35b34801561027b57600080fd5b50610296600480360361029191908101906123dc565b610eec565b005b3480156102a457600080fd5b506102ad610f3d565b6040516102ba9190612bc1565b60405180910390f35b3480156102cf57600080fd5b506102ea60048036036102e5919081019061241d565b611003565b005b3480156102f857600080fd5b50610313600480360361030e9190810190612319565b611054565b005b34801561032157600080fd5b5061033c6004803603610337919081019061235a565b6110a5565b005b34801561034a57600080fd5b506103656004803603610360919081019061249f565b6110f6565b005b34801561037357600080fd5b5061038e6004803603610389919081019061245e565b611147565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104175783829060005260206000209060030201600380602002604051908101604052809291908260038015610403576020028201915b8154815260200190600101908083116103ef575b5050505050815260200190600101906103b4565b50505050905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156104c8578382906000526020600020016003806020026040519081016040528092919082600380156104b4576020028201916000905b82829054906101000a900460ff1615158152602001906001019060208260000104928301926001038202915080841161047e5790505b505050505081526020019060010190610444565b50505050905090565b60606006805480602002602001604051908101604052809291908181526020016000905b828210156105ea5783829060005260206000209060030201600380602002604051908101604052809291906000905b828210156105d7578382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081526020019060010190610524565b50505050815260200190600101906104f5565b50505050905090565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561067a5783829060005260206000209060030201600380602002604051908101604052809291908260038015610666576020028201915b815481526020019060010190808311610652575b505050505081526020019060010190610617565b50505050905090565b7f86ef45ab9f885e53ad6927798cfe420f3b0d2fd3bdd1b81f2d5d0e42e4be015e878787878787876040516106be9796959493929190612caf565b60405180910390a186600090805190602001906106dc929190611198565b5085600190805190602001906106f39291906111f6565b50846002908051906020019061070a929190611254565b5083600390805190602001906107219291906112af565b50826004908051906020019061073892919061130d565b50816005908051906020019061074f92919061136b565b5080600690805190602001906107669291906113c9565b5050505050505050565b6060806060806060806060600060016002600360046005600686805480602002602001604051908101604052809291908181526020016000905b8282101561080d57838290600052602060002090600302016003806020026040519081016040528092919082600380156107f9576020028201915b8154815260200190600101908083116107e5575b5050505050815260200190600101906107aa565b50505050965085805480602002602001604051908101604052809291908181526020016000905b828210156108975783829060005260206000209060030201600380602002604051908101604052809291908260038015610883576020028201915b81548152602001906001019080831161086f575b505050505081526020019060010190610834565b50505050955084805480602002602001604051908101604052809291908181526020016000905b828210156109425783829060005260206000200160038060200260405190810160405280929190826003801561092e576020028201916000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116108f85790505b5050505050815260200190600101906108be565b50505050945083805480602002602001604051908101604052809291908181526020016000905b82821015610a0257838290600052602060002090600302016003806020026040519081016040528092919082600380156109ee576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109a4575b505050505081526020019060010190610969565b50505050935082805480602002602001604051908101604052809291908181526020016000905b82821015610a905783829060005260206000209060030201600380602002604051908101604052809291908260038015610a7c576020028201915b81546000191681526020019060010190808311610a64575b505050505081526020019060010190610a29565b50505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610bac5783829060005260206000209060030201600380602002604051908101604052809291906000905b82821015610b99578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b855780601f10610b5a57610100808354040283529160200191610b85565b820191906000526020600020905b815481529060010190602001808311610b6857829003601f168201915b505050505081526020019060010190610ae6565b5050505081526020019060010190610ab7565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610cc85783829060005260206000209060030201600380602002604051908101604052809291906000905b82821015610cb5578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ca15780601f10610c7657610100808354040283529160200191610ca1565b820191906000526020600020905b815481529060010190602001808311610c8457829003601f168201915b505050505081526020019060010190610c02565b5050505081526020019060010190610bd3565b505050509050965096509650965096509650965090919293949596565b8060049080519060200190610cfb92919061130d565b507f40b0ce00e5373813c8e857496d66fc5dd3f3ed6b0ff44d190300beb42aac0c5181604051610d2b9190612c05565b60405180910390a150565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610dc15783829060005260206000209060030201600380602002604051908101604052809291908260038015610dad576020028201915b81546000191681526020019060010190808311610d95575b505050505081526020019060010190610d5a565b50505050905090565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610ee35783829060005260206000209060030201600380602002604051908101604052809291906000905b82821015610ed0578382018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ebc5780601f10610e9157610100808354040283529160200191610ebc565b820191906000526020600020905b815481529060010190602001808311610e9f57829003601f168201915b505050505081526020019060010190610e1d565b5050505081526020019060010190610dee565b50505050905090565b8060069080519060200190610f029291906113c9565b507f3aa665820bb32446c51e80499bd92bb989e42fcef6ea2f52cb56f06005a35ab081604051610f329190612c27565b60405180910390a150565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015610ffa5783829060005260206000209060030201600380602002604051908101604052809291908260038015610fe6576020028201915b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610f9c575b505050505081526020019060010190610f61565b50505050905090565b80600190805190602001906110199291906111f6565b507f03baf94c8f8f35b8ea837c01fc28ce907a03d94e6ab9a9dd42e7a6cb6d63d71c816040516110499190612c49565b60405180910390a150565b806003908051906020019061106a9291906112af565b507f35e00e8ed88c7fbfa48a8c7e10c0cdb6c12764b9d350fca2145dd64a9cd5bdb08160405161109a9190612bc1565b60405180910390a150565b80600290805190602001906110bb929190611254565b507f80a67e350ad6265badb7bdbc182f9dcdddddb176e8b9eb1a3683fa0b2d4dc0d9816040516110eb9190612be3565b60405180910390a150565b806000908051906020019061110c929190611198565b507fbe7461f5591096d7a7a549b010c5af12d94e381b9d4aed16b41e08193f2df1678160405161113c9190612c8d565b60405180910390a150565b806005908051906020019061115d92919061136b565b507f563081b15f2c8221611f0c9fed8c0b84997f77051d9e616fa15f7032921fe1cf8160405161118d9190612c6b565b60405180910390a150565b8280548282559060005260206000209060030281019282156111e5579160200282015b828111156111e4578251829060036111d4929190611427565b50916020019190600301906111bb565b5b5090506111f29190611467565b5090565b828054828255906000526020600020906003028101928215611243579160200282015b8281111561124257825182906003611232929190611493565b5091602001919060030190611219565b5b50905061125091906114d3565b5090565b82805482825590600052602060002090810192821561129e579160200282015b8281111561129d5782518290600361128d9291906114ff565b5091602001919060010190611274565b5b5090506112ab9190611598565b5090565b8280548282559060005260206000209060030281019282156112fc579160200282015b828111156112fb578251829060036112eb9291906115c4565b50916020019190600301906112d2565b5b5090506113099190611641565b5090565b82805482825590600052602060002090600302810192821561135a579160200282015b828111156113595782518290600361134992919061166d565b5091602001919060030190611330565b5b50905061136791906116b3565b5090565b8280548282559060005260206000209060030281019282156113b8579160200282015b828111156113b7578251829060036113a79291906116df565b509160200191906003019061138e565b5b5090506113c59190611732565b5090565b828054828255906000526020600020906003028101928215611416579160200282015b828111156114155782518290600361140592919061175e565b50916020019190600301906113ec565b5b50905061142391906117b1565b5090565b8260038101928215611456579160200282015b8281111561145557825182559160200191906001019061143a565b5b50905061146391906117dd565b5090565b61149091905b8082111561148c57600081816114839190611802565b5060030161146d565b5090565b90565b82600381019282156114c2579160200282015b828111156114c15782518255916020019190600101906114a6565b5b5090506114cf9190611817565b5090565b6114fc91905b808211156114f857600081816114ef919061183c565b506003016114d9565b5090565b90565b826003601f016020900481019282156115875791602002820160005b8382111561155857835183826101000a81548160ff021916908315150217905550926020019260010160208160000104928301926001030261151b565b80156115855782816101000a81549060ff0219169055600101602081600001049283019260010302611558565b505b5090506115949190611851565b5090565b6115c191905b808211156115bd57600081816115b49190611881565b5060010161159e565b5090565b90565b8260038101928215611630579160200282015b8281111561162f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906115d7565b5b50905061163d9190611888565b5090565b61166a91905b80821115611666576000818161165d91906118cb565b50600301611647565b5090565b90565b82600381019282156116a2579160200282015b828111156116a1578251829060001916905591602001919060010190611680565b5b5090506116af91906118e0565b5090565b6116dc91905b808211156116d857600081816116cf9190611905565b506003016116b9565b5090565b90565b8260038101928215611721579160200282015b8281111561172057825182908051906020019061171092919061191a565b50916020019190600101906116f2565b5b50905061172e919061199a565b5090565b61175b91905b80821115611757576000818161174e91906119c6565b50600301611738565b5090565b90565b82600381019282156117a0579160200282015b8281111561179f57825182908051906020019061178f9291906119f9565b5091602001919060010190611771565b5b5090506117ad9190611a79565b5090565b6117da91905b808211156117d657600081816117cd9190611aa5565b506003016117b7565b5090565b90565b6117ff91905b808211156117fb5760008160009055506001016117e3565b5090565b90565b50600081556001016000815560010160009055565b61183991905b8082111561183557600081600090555060010161181d565b5090565b90565b50600081556001016000815560010160009055565b61187e91905b8082111561187a57600081816101000a81549060ff021916905550600101611857565b5090565b90565b5060009055565b6118c891905b808211156118c457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161188e565b5090565b90565b50600081556001016000815560010160009055565b61190291905b808211156118fe5760008160009055506001016118e6565b5090565b90565b50600081556001016000815560010160009055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061195b57805160ff1916838001178555611989565b82800160010185558215611989579182015b8281111561198857825182559160200191906001019061196d565b5b50905061199691906117dd565b5090565b6119c391905b808211156119bf57600081816119b69190611ad8565b506001016119a0565b5090565b90565b50600081816119d59190611ad8565b50600101600081816119e79190611ad8565b5060010160006119f79190611ad8565b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a3a57805160ff1916838001178555611a68565b82800160010185558215611a68579182015b82811115611a67578251825591602001919060010190611a4c565b5b509050611a7591906117dd565b5090565b611aa291905b80821115611a9e5760008181611a959190611b20565b50600101611a7f565b5090565b90565b5060008181611ab49190611b20565b5060010160008181611ac69190611b20565b506001016000611ad69190611b20565b565b50805460018160011615610100020316600290046000825580601f10611afe5750611b1d565b601f016020900490600052602060002090810190611b1c91906117dd565b5b50565b50805460018160011615610100020316600290046000825580601f10611b465750611b65565b601f016020900490600052602060002090810190611b6491906117dd565b5b50565b6000611b74823561322b565b905092915050565b600082601f8301121515611b8f57600080fd5b6003611ba2611b9d82612d7c565b612d4f565b91508183856020840282011115611bb857600080fd5b60005b83811015611be85781611bce8882611b68565b845260208401935060208301925050600181019050611bbb565b5050505092915050565b600082601f8301121515611c0557600080fd5b8135611c18611c1382612d9e565b612d4f565b91508181835260208401935060208101905083856060840282011115611c3d57600080fd5b60005b83811015611c6d5781611c538882611b7c565b845260208401935060608301925050600181019050611c40565b5050505092915050565b600082601f8301121515611c8a57600080fd5b8135611c9d611c9882612dc6565b612d4f565b91508181835260208401935060208101905083856060840282011115611cc257600080fd5b60005b83811015611cf25781611cd88882611f77565b845260208401935060608301925050600181019050611cc5565b5050505092915050565b600082601f8301121515611d0f57600080fd5b8135611d22611d1d82612dee565b612d4f565b91508181835260208401935060208101905083856060840282011115611d4757600080fd5b60005b83811015611d775781611d5d8882611fed565b845260208401935060608301925050600181019050611d4a565b5050505092915050565b600082601f8301121515611d9457600080fd5b8135611da7611da282612e16565b612d4f565b9150818183526020840193506020810190508360005b83811015611ded5781358601611dd38882612063565b845260208401935060208301925050600181019050611dbd565b5050505092915050565b600082601f8301121515611e0a57600080fd5b8135611e1d611e1882612e3e565b612d4f565b91508181835260208401935060208101905083856060840282011115611e4257600080fd5b60005b83811015611e725781611e5888826120ca565b845260208401935060608301925050600181019050611e45565b5050505092915050565b600082601f8301121515611e8f57600080fd5b8135611ea2611e9d82612e66565b612d4f565b9150818183526020840193506020810190508360005b83811015611ee85781358601611ece8882612140565b845260208401935060208301925050600181019050611eb8565b5050505092915050565b600082601f8301121515611f0557600080fd5b8135611f18611f1382612e8e565b612d4f565b91508181835260208401935060208101905083856060840282011115611f3d57600080fd5b60005b83811015611f6d5781611f5388826121a7565b845260208401935060608301925050600181019050611f40565b5050505092915050565b600082601f8301121515611f8a57600080fd5b6003611f9d611f9882612eb6565b612d4f565b91508183856020840282011115611fb357600080fd5b60005b83811015611fe35781611fc9888261221d565b845260208401935060208301925050600181019050611fb6565b5050505092915050565b600082601f830112151561200057600080fd5b600361201361200e82612ed8565b612d4f565b9150818385602084028201111561202957600080fd5b60005b83811015612059578161203f8882612231565b84526020840193506020830192505060018101905061202c565b5050505092915050565b600082601f830112151561207657600080fd5b600361208961208482612efa565b612d4f565b9150818360005b838110156120c057813586016120a68882612245565b845260208401935060208301925050600181019050612090565b5050505092915050565b600082601f83011215156120dd57600080fd5b60036120f06120eb82612f1c565b612d4f565b9150818385602084028201111561210657600080fd5b60005b83811015612136578161211c888261229b565b845260208401935060208301925050600181019050612109565b5050505092915050565b600082601f830112151561215357600080fd5b600361216661216182612f3e565b612d4f565b9150818360005b8381101561219d578135860161218388826122af565b84526020840193506020830192505060018101905061216d565b5050505092915050565b600082601f83011215156121ba57600080fd5b60036121cd6121c882612f60565b612d4f565b915081838560208402820111156121e357600080fd5b60005b8381101561221357816121f98882612305565b8452602084019350602083019250506001810190506121e6565b5050505092915050565b6000612229823561324b565b905092915050565b600061223d8235613257565b905092915050565b600082601f830112151561225857600080fd5b813561226b61226682612f82565b612d4f565b9150808252602083016020830185838301111561228757600080fd5b612292838284613275565b50505092915050565b60006122a78235613261565b905092915050565b600082601f83011215156122c257600080fd5b81356122d56122d082612fae565b612d4f565b915080825260208301602083018583830111156122f157600080fd5b6122fc838284613275565b50505092915050565b6000612311823561326b565b905092915050565b60006020828403121561232b57600080fd5b600082013567ffffffffffffffff81111561234557600080fd5b61235184828501611bf2565b91505092915050565b60006020828403121561236c57600080fd5b600082013567ffffffffffffffff81111561238657600080fd5b61239284828501611c77565b91505092915050565b6000602082840312156123ad57600080fd5b600082013567ffffffffffffffff8111156123c757600080fd5b6123d384828501611cfc565b91505092915050565b6000602082840312156123ee57600080fd5b600082013567ffffffffffffffff81111561240857600080fd5b61241484828501611d81565b91505092915050565b60006020828403121561242f57600080fd5b600082013567ffffffffffffffff81111561244957600080fd5b61245584828501611df7565b91505092915050565b60006020828403121561247057600080fd5b600082013567ffffffffffffffff81111561248a57600080fd5b61249684828501611e7c565b91505092915050565b6000602082840312156124b157600080fd5b600082013567ffffffffffffffff8111156124cb57600080fd5b6124d784828501611ef2565b91505092915050565b600080600080600080600060e0888a0312156124fb57600080fd5b600088013567ffffffffffffffff81111561251557600080fd5b6125218a828b01611ef2565b975050602088013567ffffffffffffffff81111561253e57600080fd5b61254a8a828b01611df7565b965050604088013567ffffffffffffffff81111561256757600080fd5b6125738a828b01611c77565b955050606088013567ffffffffffffffff81111561259057600080fd5b61259c8a828b01611bf2565b945050608088013567ffffffffffffffff8111156125b957600080fd5b6125c58a828b01611cfc565b93505060a088013567ffffffffffffffff8111156125e257600080fd5b6125ee8a828b01611e7c565b92505060c088013567ffffffffffffffff81111561260b57600080fd5b6126178a828b01611d81565b91505092959891949750929550565b61262f816131e1565b82525050565b61263e8161307b565b61264782612fda565b60005b828110156126795761265d858351612626565b6126668261312b565b915060208501945060018101905061264a565b5050505050565b600061268b82613086565b80845260208401935061269d83612fe4565b60005b828110156126cf576126b3868351612635565b6126bc82613138565b91506060860195506001810190506126a0565b50849250505092915050565b60006126e682613091565b8084526020840193506126f883612ff1565b60005b8281101561272a5761270e868351612923565b61271782613145565b91506060860195506001810190506126fb565b50849250505092915050565b60006127418261309c565b80845260208401935061275383612ffe565b60005b828110156127855761276986835161296e565b61277282613152565b9150606086019550600181019050612756565b50849250505092915050565b600061279c826130a7565b808452602084019350836020820285016127b58561300b565b60005b848110156127ee5783830388526127d08383516129b9565b92506127db8261315f565b91506020880197506001810190506127b8565b508196508694505050505092915050565b600061280a826130b2565b80845260208401935061281c83613018565b60005b8281101561284e57612832868351612a1e565b61283b8261316c565b915060608601955060018101905061281f565b50849250505092915050565b6000612865826130bd565b8084526020840193508360208202850161287e85613025565b60005b848110156128b7578383038852612899838351612a69565b92506128a482613179565b9150602088019750600181019050612881565b508196508694505050505092915050565b60006128d3826130c8565b8084526020840193506128e583613032565b60005b82811015612917576128fb868351612ace565b61290482613186565b91506060860195506001810190506128e8565b50849250505092915050565b61292c816130d3565b6129358261303f565b60005b828110156129675761294b858351612b19565b61295482613193565b9150602085019450600181019050612938565b5050505050565b612977816130de565b61298082613049565b60005b828110156129b257612996858351612b28565b61299f826131a0565b9150602085019450600181019050612983565b5050505050565b60006129c4826130e9565b836020820285016129d485613053565b60005b84811015612a0d5783830388526129ef838351612b37565b92506129fa826131ad565b91506020880197506001810190506129d7565b508196508694505050505092915050565b612a27816130f4565b612a308261305d565b60005b82811015612a6257612a46858351612b6d565b612a4f826131ba565b9150602085019450600181019050612a33565b5050505050565b6000612a74826130ff565b83602082028501612a8485613067565b60005b84811015612abd578383038852612a9f838351612b7c565b9250612aaa826131c7565b9150602088019750600181019050612a87565b508196508694505050505092915050565b612ad78161310a565b612ae082613071565b60005b82811015612b1257612af6858351612bb2565b612aff826131d4565b9150602085019450600181019050612ae3565b5050505050565b612b2281613201565b82525050565b612b318161320d565b82525050565b6000612b4282613115565b808452612b56816020860160208601613284565b612b5f816132b7565b602085010191505092915050565b612b7681613217565b82525050565b6000612b8782613120565b808452612b9b816020860160208601613284565b612ba4816132b7565b602085010191505092915050565b612bbb81613221565b82525050565b60006020820190508181036000830152612bdb8184612680565b905092915050565b60006020820190508181036000830152612bfd81846126db565b905092915050565b60006020820190508181036000830152612c1f8184612736565b905092915050565b60006020820190508181036000830152612c418184612791565b905092915050565b60006020820190508181036000830152612c6381846127ff565b905092915050565b60006020820190508181036000830152612c85818461285a565b905092915050565b60006020820190508181036000830152612ca781846128c8565b905092915050565b600060e0820190508181036000830152612cc9818a6128c8565b90508181036020830152612cdd81896127ff565b90508181036040830152612cf181886126db565b90508181036060830152612d058187612680565b90508181036080830152612d198186612736565b905081810360a0830152612d2d818561285a565b905081810360c0830152612d418184612791565b905098975050505050505050565b6000604051905081810181811067ffffffffffffffff82111715612d7257600080fd5b8060405250919050565b600067ffffffffffffffff821115612d9357600080fd5b602082029050919050565b600067ffffffffffffffff821115612db557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612ddd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612e0557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612e2d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612e5557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612e7d57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612ea557600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115612ecd57600080fd5b602082029050919050565b600067ffffffffffffffff821115612eef57600080fd5b602082029050919050565b600067ffffffffffffffff821115612f1157600080fd5b602082029050919050565b600067ffffffffffffffff821115612f3357600080fd5b602082029050919050565b600067ffffffffffffffff821115612f5557600080fd5b602082029050919050565b600067ffffffffffffffff821115612f7757600080fd5b602082029050919050565b600067ffffffffffffffff821115612f9957600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115612fc557600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600060039050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600060039050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156132a2578082015181840152602081019050613287565b838111156132b1576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582074acaedd6e3b2f2e9f4fcb73111f033e537ca28a81aa1f7f4119d004180be8066c6578706572696d656e74616cf50037";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_u\",\"type\":\"uint256[3][]\"},{\"name\":\"_i\",\"type\":\"int256[3][]\"},{\"name\":\"_b\",\"type\":\"bool[3][]\"},{\"name\":\"_addr\",\"type\":\"address[3][]\"},{\"name\":\"_bs32\",\"type\":\"bytes32[3][]\"},{\"name\":\"_s\",\"type\":\"string[3][]\"},{\"name\":\"_bs\",\"type\":\"bytes[3][]\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[3][]\"},{\"name\":\"\",\"type\":\"int256[3][]\"},{\"name\":\"\",\"type\":\"bool[3][]\"},{\"name\":\"\",\"type\":\"address[3][]\"},{\"name\":\"\",\"type\":\"bytes32[3][]\"},{\"name\":\"\",\"type\":\"string[3][]\"},{\"name\":\"\",\"type\":\"bytes[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bytes32[3][]\"}],\"name\":\"setBS32\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBS32\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getString\",\"outputs\":[{\"name\":\"\",\"type\":\"string[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bytes[3][]\"}],\"name\":\"setBS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address[3][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_i\",\"type\":\"int256[3][]\"}],\"name\":\"setInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address[3][]\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bool[3][]\"}],\"name\":\"setBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_u\",\"type\":\"uint256[3][]\"}],\"name\":\"setUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_s\",\"type\":\"string[3][]\"}],\"name\":\"setString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"u\",\"type\":\"uint256[3][]\"}],\"name\":\"EventUint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"i\",\"type\":\"int256[3][]\"}],\"name\":\"EventInt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bool[3][]\"}],\"name\":\"EventBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address[3][]\"}],\"name\":\"EventAddr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bytes32[3][]\"}],\"name\":\"EventB32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string[3][]\"}],\"name\":\"EventString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bytes[3][]\"}],\"name\":\"EventBS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_u\",\"type\":\"uint256[3][]\"},{\"indexed\":false,\"name\":\"_i\",\"type\":\"int256[3][]\"},{\"indexed\":false,\"name\":\"_b\",\"type\":\"bool[3][]\"},{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address[3][]\"},{\"indexed\":false,\"name\":\"_bs32\",\"type\":\"bytes32[3][]\"},{\"indexed\":false,\"name\":\"_s\",\"type\":\"string[3][]\"},{\"indexed\":false,\"name\":\"_bs\",\"type\":\"bytes[3][]\"}],\"name\":\"Event\",\"type\":\"event\"}]";

    public static final String FUNC_GETUINT = "getUint";

    public static final String FUNC_GETBOOL = "getBool";

    public static final String FUNC_GETBS = "getBS";

    public static final String FUNC_GETINT = "getInt";

    public static final String FUNC_SET = "set";

    public static final String FUNC_GET = "get";

    public static final String FUNC_SETBS32 = "setBS32";

    public static final String FUNC_GETBS32 = "getBS32";

    public static final String FUNC_GETSTRING = "getString";

    public static final String FUNC_SETBS = "setBS";

    public static final String FUNC_GETADDR = "getAddr";

    public static final String FUNC_SETINT = "setInt";

    public static final String FUNC_SETADDR = "setAddr";

    public static final String FUNC_SETBOOL = "setBool";

    public static final String FUNC_SETUINT = "setUint";

    public static final String FUNC_SETSTRING = "setString";

    public static final Event EVENTUINT_EVENT = new Event("EventUint", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Uint256>>>() {}));
    ;

    public static final Event EVENTINT_EVENT = new Event("EventInt", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Int256>>>() {}));
    ;

    public static final Event EVENTBOOL_EVENT = new Event("EventBool", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Bool>>>() {}));
    ;

    public static final Event EVENTADDR_EVENT = new Event("EventAddr", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Address>>>() {}));
    ;

    public static final Event EVENTB32_EVENT = new Event("EventB32", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Bytes32>>>() {}));
    ;

    public static final Event EVENTSTRING_EVENT = new Event("EventString", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Utf8String>>>() {}));
    ;

    public static final Event EVENTBS_EVENT = new Event("EventBS", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<DynamicBytes>>>() {}));
    ;

    public static final Event EVENT_EVENT = new Event("Event", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Uint256>>>() {}, new TypeReference<DynamicArray<StaticArray3<Int256>>>() {}, new TypeReference<DynamicArray<StaticArray3<Bool>>>() {}, new TypeReference<DynamicArray<StaticArray3<Address>>>() {}, new TypeReference<DynamicArray<StaticArray3<Bytes32>>>() {}, new TypeReference<DynamicArray<StaticArray3<Utf8String>>>() {}, new TypeReference<DynamicArray<StaticArray3<DynamicBytes>>>() {}));
    ;

    @Deprecated
    protected EchoArray3Array(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected EchoArray3Array(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected EchoArray3Array(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected EchoArray3Array(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<List> getUint() {
        final Function function = new Function(FUNC_GETUINT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Uint256>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getBool() {
        final Function function = new Function(FUNC_GETBOOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Bool>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getBS() {
        final Function function = new Function(FUNC_GETBS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<DynamicBytes>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getInt() {
        final Function function = new Function(FUNC_GETINT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Int256>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> set(List<List<BigInteger>> _u, List<List<BigInteger>> _i, List<List<Boolean>> _b, List<List<String>> _addr, List<List<byte[]>> _bs32, List<List<String>> _s, List<List<byte[]>> _bs) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void set(List<List<BigInteger>> _u, List<List<BigInteger>> _i, List<List<Boolean>> _b, List<List<String>> _addr, List<List<byte[]>> _bs32, List<List<String>> _s, List<List<byte[]>> _bs, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setSeq(List<List<BigInteger>> _u, List<List<BigInteger>> _i, List<List<Boolean>> _b, List<List<String>> _addr, List<List<byte[]>> _bs32, List<List<String>> _s, List<List<byte[]>> _bs) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>> get() {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Uint256>>>() {}, new TypeReference<DynamicArray<StaticArray3<Int256>>>() {}, new TypeReference<DynamicArray<StaticArray3<Bool>>>() {}, new TypeReference<DynamicArray<StaticArray3<Address>>>() {}, new TypeReference<DynamicArray<StaticArray3<Bytes32>>>() {}, new TypeReference<DynamicArray<StaticArray3<Utf8String>>>() {}, new TypeReference<DynamicArray<StaticArray3<DynamicBytes>>>() {}));
        return new RemoteCall<Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>>(
                new Callable<Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>>() {
                    @Override
                    public Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>(
                                convertToNative((List<StaticArray3<Uint256>>) results.get(0).getValue()), 
                                convertToNative((List<StaticArray3<Int256>>) results.get(1).getValue()), 
                                convertToNative((List<StaticArray3<Bool>>) results.get(2).getValue()), 
                                convertToNative((List<StaticArray3<Address>>) results.get(3).getValue()), 
                                convertToNative((List<StaticArray3<Bytes32>>) results.get(4).getValue()), 
                                convertToNative((List<StaticArray3<Utf8String>>) results.get(5).getValue()), 
                                convertToNative((List<StaticArray3<DynamicBytes>>) results.get(6).getValue()));
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setBS32(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBS32(List<List<byte[]>> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setBS32Seq(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<List> getBS32() {
        final Function function = new Function(FUNC_GETBS32, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Bytes32>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getString() {
        final Function function = new Function(FUNC_GETSTRING, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Utf8String>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setBS(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBS(List<List<byte[]>> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setBSSeq(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<List> getAddr() {
        final Function function = new Function(FUNC_GETADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<StaticArray3<Address>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setInt(List<List<BigInteger>> _i) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setInt(List<List<BigInteger>> _i, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setIntSeq(List<List<BigInteger>> _i) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setAddr(List<List<String>> _addr) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setAddr(List<List<String>> _addr, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setAddrSeq(List<List<String>> _addr) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setBool(List<List<Boolean>> _b) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBool(List<List<Boolean>> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setBoolSeq(List<List<Boolean>> _b) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setUint(List<List<BigInteger>> _u) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setUint(List<List<BigInteger>> _u, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setUintSeq(List<List<BigInteger>> _u) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setString(List<List<String>> _s) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setString(List<List<String>> _s, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setStringSeq(List<List<String>> _s) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.generated.StaticArray3.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public List<EventUintEventResponse> getEventUintEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTUINT_EVENT, transactionReceipt);
        ArrayList<EventUintEventResponse> responses = new ArrayList<EventUintEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventUintEventResponse typedResponse = new EventUintEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventUintEventResponse> eventUintEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventUintEventResponse>() {
            @Override
            public EventUintEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTUINT_EVENT, log);
                EventUintEventResponse typedResponse = new EventUintEventResponse();
                typedResponse.log = log;
                typedResponse.u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventUintEventResponse> eventUintEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTUINT_EVENT));
        return eventUintEventFlowable(filter);
    }

    public List<EventIntEventResponse> getEventIntEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTINT_EVENT, transactionReceipt);
        ArrayList<EventIntEventResponse> responses = new ArrayList<EventIntEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventIntEventResponse typedResponse = new EventIntEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventIntEventResponse> eventIntEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventIntEventResponse>() {
            @Override
            public EventIntEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTINT_EVENT, log);
                EventIntEventResponse typedResponse = new EventIntEventResponse();
                typedResponse.log = log;
                typedResponse.i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventIntEventResponse> eventIntEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTINT_EVENT));
        return eventIntEventFlowable(filter);
    }

    public List<EventBoolEventResponse> getEventBoolEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTBOOL_EVENT, transactionReceipt);
        ArrayList<EventBoolEventResponse> responses = new ArrayList<EventBoolEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventBoolEventResponse typedResponse = new EventBoolEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventBoolEventResponse> eventBoolEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventBoolEventResponse>() {
            @Override
            public EventBoolEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTBOOL_EVENT, log);
                EventBoolEventResponse typedResponse = new EventBoolEventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventBoolEventResponse> eventBoolEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTBOOL_EVENT));
        return eventBoolEventFlowable(filter);
    }

    public List<EventAddrEventResponse> getEventAddrEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTADDR_EVENT, transactionReceipt);
        ArrayList<EventAddrEventResponse> responses = new ArrayList<EventAddrEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventAddrEventResponse typedResponse = new EventAddrEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventAddrEventResponse> eventAddrEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventAddrEventResponse>() {
            @Override
            public EventAddrEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTADDR_EVENT, log);
                EventAddrEventResponse typedResponse = new EventAddrEventResponse();
                typedResponse.log = log;
                typedResponse.addr = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventAddrEventResponse> eventAddrEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTADDR_EVENT));
        return eventAddrEventFlowable(filter);
    }

    public List<EventB32EventResponse> getEventB32Events(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTB32_EVENT, transactionReceipt);
        ArrayList<EventB32EventResponse> responses = new ArrayList<EventB32EventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventB32EventResponse typedResponse = new EventB32EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventB32EventResponse> eventB32EventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventB32EventResponse>() {
            @Override
            public EventB32EventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTB32_EVENT, log);
                EventB32EventResponse typedResponse = new EventB32EventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventB32EventResponse> eventB32EventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTB32_EVENT));
        return eventB32EventFlowable(filter);
    }

    public List<EventStringEventResponse> getEventStringEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTSTRING_EVENT, transactionReceipt);
        ArrayList<EventStringEventResponse> responses = new ArrayList<EventStringEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventStringEventResponse typedResponse = new EventStringEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.s = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventStringEventResponse> eventStringEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventStringEventResponse>() {
            @Override
            public EventStringEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTSTRING_EVENT, log);
                EventStringEventResponse typedResponse = new EventStringEventResponse();
                typedResponse.log = log;
                typedResponse.s = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventStringEventResponse> eventStringEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTSTRING_EVENT));
        return eventStringEventFlowable(filter);
    }

    public List<EventBSEventResponse> getEventBSEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTBS_EVENT, transactionReceipt);
        ArrayList<EventBSEventResponse> responses = new ArrayList<EventBSEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventBSEventResponse typedResponse = new EventBSEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventBSEventResponse> eventBSEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventBSEventResponse>() {
            @Override
            public EventBSEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTBS_EVENT, log);
                EventBSEventResponse typedResponse = new EventBSEventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventBSEventResponse> eventBSEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTBS_EVENT));
        return eventBSEventFlowable(filter);
    }

    public List<EventEventResponse> getEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENT_EVENT, transactionReceipt);
        ArrayList<EventEventResponse> responses = new ArrayList<EventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventEventResponse typedResponse = new EventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._addr = (List<List<String>>) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._bs32 = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse._s = (List<List<String>>) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse._bs = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(6).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventEventResponse> eventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventEventResponse>() {
            @Override
            public EventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENT_EVENT, log);
                EventEventResponse typedResponse = new EventEventResponse();
                typedResponse.log = log;
                typedResponse._u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._addr = (List<List<String>>) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._bs32 = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse._s = (List<List<String>>) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse._bs = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(6).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventEventResponse> eventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENT_EVENT));
        return eventEventFlowable(filter);
    }

    @Deprecated
    public static EchoArray3Array load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EchoArray3Array(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static EchoArray3Array load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EchoArray3Array(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static EchoArray3Array load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new EchoArray3Array(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static EchoArray3Array load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new EchoArray3Array(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<EchoArray3Array> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EchoArray3Array.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EchoArray3Array> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EchoArray3Array.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<EchoArray3Array> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EchoArray3Array.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EchoArray3Array> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EchoArray3Array.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class EventUintEventResponse {
        public Log log;

        public List<List<BigInteger>> u;
    }

    public static class EventIntEventResponse {
        public Log log;

        public List<List<BigInteger>> i;
    }

    public static class EventBoolEventResponse {
        public Log log;

        public List<List<Boolean>> b;
    }

    public static class EventAddrEventResponse {
        public Log log;

        public List<List<String>> addr;
    }

    public static class EventB32EventResponse {
        public Log log;

        public List<List<byte[]>> b;
    }

    public static class EventStringEventResponse {
        public Log log;

        public List<List<String>> s;
    }

    public static class EventBSEventResponse {
        public Log log;

        public List<List<byte[]>> b;
    }

    public static class EventEventResponse {
        public Log log;

        public List<List<BigInteger>> _u;

        public List<List<BigInteger>> _i;

        public List<List<Boolean>> _b;

        public List<List<String>> _addr;

        public List<List<byte[]>> _bs32;

        public List<List<String>> _s;

        public List<List<byte[]>> _bs;
    }
}
