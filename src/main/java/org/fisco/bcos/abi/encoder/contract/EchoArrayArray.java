package org.fisco.bcos.abi.encoder.contract;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.EventEncoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.Bool;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.DynamicBytes;
import org.fisco.bcos.web3j.abi.datatypes.Event;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.DefaultBlockParameter;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.request.BcosFilter;
import org.fisco.bcos.web3j.protocol.core.methods.response.Log;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class EchoArrayArray extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b5061358f806100206000396000f3006080604052600436106100e5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680620267a4146100ea57806312a7b9141461011557806325f233a51461014057806333722ab41461016b578063544c29f31461019457806362738998146101bd5780636d4ce63c146101e8578063839ebdfd1461021957806389ea642f146102445780638d807a271461026f5780639cfe537014610298578063a74c2bb6146102c1578063cd8f2b1a146102ec578063d4eaeb9714610315578063ea1e4ef31461033e578063f3463f6d14610367575b600080fd5b3480156100f657600080fd5b506100ff610390565b60405161010c9190612edb565b60405180910390f35b34801561012157600080fd5b5061012a61042f565b6040516101379190612e31565b60405180910390f35b34801561014c57600080fd5b506101556104f3565b6040516101629190612e75565b60405180910390f35b34801561017757600080fd5b50610192600480360361018d9190810190612569565b610623565b005b3480156101a057600080fd5b506101bb60048036036101b6919081019061266d565b610674565b005b3480156101c957600080fd5b506101d2610761565b6040516101df9190612e97565b60405180910390f35b3480156101f457600080fd5b506101fd610800565b6040516102109796959493929190612efd565b60405180910390f35b34801561022557600080fd5b5061022e610de0565b60405161023b9190612e53565b60405180910390f35b34801561025057600080fd5b50610259610e83565b6040516102669190612eb9565b60405180910390f35b34801561027b57600080fd5b506102966004803603610291919081019061262c565b610fb3565b005b3480156102a457600080fd5b506102bf60048036036102ba91908101906124e7565b611004565b005b3480156102cd57600080fd5b506102d6611055565b6040516102e39190612e0f565b60405180910390f35b3480156102f857600080fd5b50610313600480360361030e91908101906125eb565b61112a565b005b34801561032157600080fd5b5061033c600480360361033791908101906124a6565b61117b565b005b34801561034a57600080fd5b50610365600480360361036091908101906125aa565b6111cc565b005b34801561037357600080fd5b5061038e60048036036103899190810190612528565b61121d565b005b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104265783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561041257602002820191906000526020600020905b8154815260200190600101908083116103fe575b5050505050815260200190600101906103b4565b50505050905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156104ea578382906000526020600020018054806020026020016040519081016040528092919081815260200182805480156104d657602002820191906000526020600020906000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116104a05790505b505050505081526020019060010190610453565b50505050905090565b60606006805480602002602001604051908101604052809291908181526020016000905b8282101561061a57838290600052602060002001805480602002602001604051908101604052809291908181526020016000905b82821015610607578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105f35780601f106105c8576101008083540402835291602001916105f3565b820191906000526020600020905b8154815290600101906020018083116105d657829003601f168201915b50505050508152602001906001019061054b565b5050505081526020019060010190610517565b50505050905090565b806006908051906020019061063992919061126e565b507fa3818636381cdaa88a2f5a5de8f62a40dc0625bd089347d5c25c34db69a69533816040516106699190612e75565b60405180910390a150565b7f3ac011343ccf7cc7c03cd0b70dc0ebc29ddd592e3ba96d44a38d492265fb1faa878787878787876040516106af9796959493929190612efd565b60405180910390a186600090805190602001906106cd9291906112ce565b5085600190805190602001906106e492919061132e565b5084600290805190602001906106fb92919061138e565b5083600390805190602001906107129291906113ee565b50826004908051906020019061072992919061144e565b5081600590805190602001906107409291906114ae565b50806006908051906020019061075792919061126e565b5050505050505050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156107f7578382906000526020600020018054806020026020016040519081016040528092919081815260200182805480156107e357602002820191906000526020600020905b8154815260200190600101908083116107cf575b505050505081526020019060010190610785565b50505050905090565b6060806060806060806060600060016002600360046005600686805480602002602001604051908101604052809291908181526020016000905b828210156108ac5783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561089857602002820191906000526020600020905b815481526020019060010190808311610884575b50505050508152602001906001019061083a565b50505050965085805480602002602001604051908101604052809291908181526020016000905b828210156109455783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561093157602002820191906000526020600020905b81548152602001906001019080831161091d575b5050505050815260200190600101906108d3565b50505050955084805480602002602001604051908101604052809291908181526020016000905b82821015610a03578382906000526020600020018054806020026020016040519081016040528092919081815260200182805480156109ef57602002820191906000526020600020906000905b82829054906101000a900460ff161515815260200190600101906020826000010492830192600103820291508084116109b95790505b50505050508152602001906001019061096c565b50505050945083805480602002602001604051908101604052809291908181526020016000905b82821015610ad257838290600052602060002001805480602002602001604051908101604052809291908181526020018280548015610abe57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a74575b505050505081526020019060010190610a2a565b50505050935082805480602002602001604051908101604052809291908181526020016000905b82821015610b6f57838290600052602060002001805480602002602001604051908101604052809291908181526020018280548015610b5b57602002820191906000526020600020905b81546000191681526020019060010190808311610b43575b505050505081526020019060010190610af9565b50505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610c9957838290600052602060002001805480602002602001604051908101604052809291908181526020016000905b82821015610c86578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c725780601f10610c4757610100808354040283529160200191610c72565b820191906000526020600020905b815481529060010190602001808311610c5557829003601f168201915b505050505081526020019060010190610bca565b5050505081526020019060010190610b96565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610dc357838290600052602060002001805480602002602001604051908101604052809291908181526020016000905b82821015610db0578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9c5780601f10610d7157610100808354040283529160200191610d9c565b820191906000526020600020905b815481529060010190602001808311610d7f57829003601f168201915b505050505081526020019060010190610cf4565b5050505081526020019060010190610cc0565b505050509050965096509650965096509650965090919293949596565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610e7a57838290600052602060002001805480602002602001604051908101604052809291908181526020018280548015610e6657602002820191906000526020600020905b81546000191681526020019060010190808311610e4e575b505050505081526020019060010190610e04565b50505050905090565b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610faa57838290600052602060002001805480602002602001604051908101604052809291908181526020016000905b82821015610f97578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f835780601f10610f5857610100808354040283529160200191610f83565b820191906000526020600020905b815481529060010190602001808311610f6657829003601f168201915b505050505081526020019060010190610edb565b5050505081526020019060010190610ea7565b50505050905090565b8060009080519060200190610fc99291906112ce565b507fba863d58e68725ad9c46bf61b5d1a7bdba19677c86c2a9100e0fd891eb744bf881604051610ff99190612edb565b60405180910390a150565b806002908051906020019061101a92919061138e565b507fdb95b6ae540323325e4cfdd0a3b0a00d0fe885743cfa1eea5073b9d27ed6f65d8160405161104a9190612e31565b60405180910390a150565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156111215783829060005260206000200180548060200260200160405190810160405280929190818152602001828054801561110d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110c3575b505050505081526020019060010190611079565b50505050905090565b80600590805190602001906111409291906114ae565b507faac5b29841e9c9d2f0f34627dfd2f1a2323283bb03390f73b681f9a729bbda8e816040516111709190612eb9565b60405180910390a150565b80600390805190602001906111919291906113ee565b507fecdeb291e6b56be78f108fa36a2d237f54524d4c6d9cf355b110a34d9d0aabd8816040516111c19190612e0f565b60405180910390a150565b80600190805190602001906111e292919061132e565b507fe1e3f5c47336a7486828cc1e540c4c724e65ab1016fe31361cce8d8351d761c4816040516112129190612e97565b60405180910390a150565b806004908051906020019061123392919061144e565b507f0706b683bb2a08a168fee02ecf632a6a8c196510e1eddb59a636e0cc290fb8f6816040516112639190612e53565b60405180910390a150565b8280548282559060005260206000209081019282156112bd579160200282015b828111156112bc5782518290805190602001906112ac92919061150e565b509160200191906001019061128e565b5b5090506112ca919061156e565b5090565b82805482825590600052602060002090810192821561131d579160200282015b8281111561131c57825182908051906020019061130c92919061159a565b50916020019190600101906112ee565b5b50905061132a91906115e7565b5090565b82805482825590600052602060002090810192821561137d579160200282015b8281111561137c57825182908051906020019061136c929190611613565b509160200191906001019061134e565b5b50905061138a9190611660565b5090565b8280548282559060005260206000209081019282156113dd579160200282015b828111156113dc5782518290805190602001906113cc92919061168c565b50916020019190600101906113ae565b5b5090506113ea9190611732565b5090565b82805482825590600052602060002090810192821561143d579160200282015b8281111561143c57825182908051906020019061142c92919061175e565b509160200191906001019061140e565b5b50905061144a91906117e8565b5090565b82805482825590600052602060002090810192821561149d579160200282015b8281111561149c57825182908051906020019061148c929190611814565b509160200191906001019061146e565b5b5090506114aa9190611867565b5090565b8280548282559060005260206000209081019282156114fd579160200282015b828111156114fc5782518290805190602001906114ec929190611893565b50916020019190600101906114ce565b5b50905061150a91906118f3565b5090565b82805482825590600052602060002090810192821561155d579160200282015b8281111561155c57825182908051906020019061154c92919061191f565b509160200191906001019061152e565b5b50905061156a919061199f565b5090565b61159791905b80821115611593576000818161158a91906119cb565b50600101611574565b5090565b90565b8280548282559060005260206000209081019282156115d6579160200282015b828111156115d55782518255916020019190600101906115ba565b5b5090506115e391906119ec565b5090565b61161091905b8082111561160c57600081816116039190611a11565b506001016115ed565b5090565b90565b82805482825590600052602060002090810192821561164f579160200282015b8281111561164e578251825591602001919060010190611633565b5b50905061165c9190611a32565b5090565b61168991905b80821115611685576000818161167c9190611a57565b50600101611666565b5090565b90565b82805482825590600052602060002090601f016020900481019282156117215791602002820160005b838211156116f257835183826101000a81548160ff02191690831515021790555092602001926001016020816000010492830192600103026116b5565b801561171f5782816101000a81549060ff02191690556001016020816000010492830192600103026116f2565b505b50905061172e9190611a78565b5090565b61175b91905b80821115611757576000818161174e9190611aa8565b50600101611738565b5090565b90565b8280548282559060005260206000209081019282156117d7579160200282015b828111156117d65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061177e565b5b5090506117e49190611ad0565b5090565b61181191905b8082111561180d57600081816118049190611b13565b506001016117ee565b5090565b90565b828054828255906000526020600020908101928215611856579160200282015b82811115611855578251829060001916905591602001919060010190611834565b5b5090506118639190611b34565b5090565b61189091905b8082111561188c57600081816118839190611b59565b5060010161186d565b5090565b90565b8280548282559060005260206000209081019282156118e2579160200282015b828111156118e15782518290805190602001906118d1929190611b7a565b50916020019190600101906118b3565b5b5090506118ef9190611bfa565b5090565b61191c91905b80821115611918576000818161190f9190611c26565b506001016118f9565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061196057805160ff191683800117855561198e565b8280016001018555821561198e579182015b8281111561198d578251825591602001919060010190611972565b5b50905061199b91906119ec565b5090565b6119c891905b808211156119c457600081816119bb9190611c47565b506001016119a5565b5090565b90565b50805460008255906000526020600020908101906119e9919061199f565b50565b611a0e91905b80821115611a0a5760008160009055506001016119f2565b5090565b90565b5080546000825590600052602060002090810190611a2f91906119ec565b50565b611a5491905b80821115611a50576000816000905550600101611a38565b5090565b90565b5080546000825590600052602060002090810190611a759190611a32565b50565b611aa591905b80821115611aa157600081816101000a81549060ff021916905550600101611a7e565b5090565b90565b50805460008255601f016020900490600052602060002090810190611acd91906119ec565b50565b611b1091905b80821115611b0c57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611ad6565b5090565b90565b5080546000825590600052602060002090810190611b3191906119ec565b50565b611b5691905b80821115611b52576000816000905550600101611b3a565b5090565b90565b5080546000825590600052602060002090810190611b779190611b34565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bbb57805160ff1916838001178555611be9565b82800160010185558215611be9579182015b82811115611be8578251825591602001919060010190611bcd565b5b509050611bf691906119ec565b5090565b611c2391905b80821115611c1f5760008181611c169190611c8f565b50600101611c00565b5090565b90565b5080546000825590600052602060002090810190611c449190611bfa565b50565b50805460018160011615610100020316600290046000825580601f10611c6d5750611c8c565b601f016020900490600052602060002090810190611c8b91906119ec565b5b50565b50805460018160011615610100020316600290046000825580601f10611cb55750611cd4565b601f016020900490600052602060002090810190611cd391906119ec565b5b50565b6000611ce382356134b8565b905092915050565b600082601f8301121515611cfe57600080fd5b8135611d11611d0c82612fca565b612f9d565b91508181835260208401935060208101905083856020840282011115611d3657600080fd5b60005b83811015611d665781611d4c8882611cd7565b845260208401935060208301925050600181019050611d39565b5050505092915050565b600082601f8301121515611d8357600080fd5b8135611d96611d9182612ff2565b612f9d565b9150818183526020840193506020810190508360005b83811015611ddc5781358601611dc28882611ceb565b845260208401935060208301925050600181019050611dac565b5050505092915050565b600082601f8301121515611df957600080fd5b8135611e0c611e078261301a565b612f9d565b9150818183526020840193506020810190508360005b83811015611e525781358601611e3888826120aa565b845260208401935060208301925050600181019050611e22565b5050505092915050565b600082601f8301121515611e6f57600080fd5b8135611e82611e7d82613042565b612f9d565b9150818183526020840193506020810190508360005b83811015611ec85781358601611eae888261212f565b845260208401935060208301925050600181019050611e98565b5050505092915050565b600082601f8301121515611ee557600080fd5b8135611ef8611ef38261306a565b612f9d565b9150818183526020840193506020810190508360005b83811015611f3e5781358601611f2488826121b4565b845260208401935060208301925050600181019050611f0e565b5050505092915050565b600082601f8301121515611f5b57600080fd5b8135611f6e611f6982613092565b612f9d565b9150818183526020840193506020810190508360005b83811015611fb45781358601611f9a888261222a565b845260208401935060208301925050600181019050611f84565b5050505092915050565b600082601f8301121515611fd157600080fd5b8135611fe4611fdf826130ba565b612f9d565b9150818183526020840193506020810190508360005b8381101561202a578135860161201088826122af565b845260208401935060208301925050600181019050611ffa565b5050505092915050565b600082601f830112151561204757600080fd5b813561205a612055826130e2565b612f9d565b9150818183526020840193506020810190508360005b838110156120a057813586016120868882612325565b845260208401935060208301925050600181019050612070565b5050505092915050565b600082601f83011215156120bd57600080fd5b81356120d06120cb8261310a565b612f9d565b915081818352602084019350602081019050838560208402820111156120f557600080fd5b60005b83811015612125578161210b88826123aa565b8452602084019350602083019250506001810190506120f8565b5050505092915050565b600082601f830112151561214257600080fd5b813561215561215082613132565b612f9d565b9150818183526020840193506020810190508385602084028201111561217a57600080fd5b60005b838110156121aa578161219088826123be565b84526020840193506020830192505060018101905061217d565b5050505092915050565b600082601f83011215156121c757600080fd5b81356121da6121d58261315a565b612f9d565b9150818183526020840193506020810190508360005b83811015612220578135860161220688826123d2565b8452602084019350602083019250506001810190506121f0565b5050505092915050565b600082601f830112151561223d57600080fd5b813561225061224b82613182565b612f9d565b9150818183526020840193506020810190508385602084028201111561227557600080fd5b60005b838110156122a5578161228b8882612428565b845260208401935060208301925050600181019050612278565b5050505092915050565b600082601f83011215156122c257600080fd5b81356122d56122d0826131aa565b612f9d565b9150818183526020840193506020810190508360005b8381101561231b5781358601612301888261243c565b8452602084019350602083019250506001810190506122eb565b5050505092915050565b600082601f830112151561233857600080fd5b813561234b612346826131d2565b612f9d565b9150818183526020840193506020810190508385602084028201111561237057600080fd5b60005b838110156123a057816123868882612492565b845260208401935060208301925050600181019050612373565b5050505092915050565b60006123b682356134d8565b905092915050565b60006123ca82356134e4565b905092915050565b600082601f83011215156123e557600080fd5b81356123f86123f3826131fa565b612f9d565b9150808252602083016020830185838301111561241457600080fd5b61241f838284613502565b50505092915050565b600061243482356134ee565b905092915050565b600082601f830112151561244f57600080fd5b813561246261245d82613226565b612f9d565b9150808252602083016020830185838301111561247e57600080fd5b612489838284613502565b50505092915050565b600061249e82356134f8565b905092915050565b6000602082840312156124b857600080fd5b600082013567ffffffffffffffff8111156124d257600080fd5b6124de84828501611d70565b91505092915050565b6000602082840312156124f957600080fd5b600082013567ffffffffffffffff81111561251357600080fd5b61251f84828501611de6565b91505092915050565b60006020828403121561253a57600080fd5b600082013567ffffffffffffffff81111561255457600080fd5b61256084828501611e5c565b91505092915050565b60006020828403121561257b57600080fd5b600082013567ffffffffffffffff81111561259557600080fd5b6125a184828501611ed2565b91505092915050565b6000602082840312156125bc57600080fd5b600082013567ffffffffffffffff8111156125d657600080fd5b6125e284828501611f48565b91505092915050565b6000602082840312156125fd57600080fd5b600082013567ffffffffffffffff81111561261757600080fd5b61262384828501611fbe565b91505092915050565b60006020828403121561263e57600080fd5b600082013567ffffffffffffffff81111561265857600080fd5b61266484828501612034565b91505092915050565b600080600080600080600060e0888a03121561268857600080fd5b600088013567ffffffffffffffff8111156126a257600080fd5b6126ae8a828b01612034565b975050602088013567ffffffffffffffff8111156126cb57600080fd5b6126d78a828b01611f48565b965050604088013567ffffffffffffffff8111156126f457600080fd5b6127008a828b01611de6565b955050606088013567ffffffffffffffff81111561271d57600080fd5b6127298a828b01611d70565b945050608088013567ffffffffffffffff81111561274657600080fd5b6127528a828b01611e5c565b93505060a088013567ffffffffffffffff81111561276f57600080fd5b61277b8a828b01611fbe565b92505060c088013567ffffffffffffffff81111561279857600080fd5b6127a48a828b01611ed2565b91505092959891949750929550565b6127bc8161346e565b82525050565b60006127cd82613308565b8084526020840193506127df83613252565b60005b82811015612811576127f58683516127b3565b6127fe826133b8565b91506020860195506001810190506127e2565b50849250505092915050565b600061282882613313565b808452602084019350836020820285016128418561325f565b60005b8481101561287a57838303885261285c8383516127c2565b9250612867826133c5565b9150602088019750600181019050612844565b508196508694505050505092915050565b60006128968261331e565b808452602084019350836020820285016128af8561326c565b60005b848110156128e85783830388526128ca838351612b1f565b92506128d5826133d2565b91506020880197506001810190506128b2565b508196508694505050505092915050565b600061290482613329565b8084526020840193508360208202850161291d85613279565b60005b84811015612956578383038852612938838351612b7a565b9250612943826133df565b9150602088019750600181019050612920565b508196508694505050505092915050565b600061297282613334565b8084526020840193508360208202850161298b85613286565b60005b848110156129c45783830388526129a6838351612bd5565b92506129b1826133ec565b915060208801975060018101905061298e565b508196508694505050505092915050565b60006129e08261333f565b808452602084019350836020820285016129f985613293565b60005b84811015612a32578383038852612a14838351612c43565b9250612a1f826133f9565b91506020880197506001810190506129fc565b508196508694505050505092915050565b6000612a4e8261334a565b80845260208401935083602082028501612a67856132a0565b60005b84811015612aa0578383038852612a82838351612c9e565b9250612a8d82613406565b9150602088019750600181019050612a6a565b508196508694505050505092915050565b6000612abc82613355565b80845260208401935083602082028501612ad5856132ad565b60005b84811015612b0e578383038852612af0838351612d0c565b9250612afb82613413565b9150602088019750600181019050612ad8565b508196508694505050505092915050565b6000612b2a82613360565b808452602084019350612b3c836132ba565b60005b82811015612b6e57612b52868351612d67565b612b5b82613420565b9150602086019550600181019050612b3f565b50849250505092915050565b6000612b858261336b565b808452602084019350612b97836132c7565b60005b82811015612bc957612bad868351612d76565b612bb68261342d565b9150602086019550600181019050612b9a565b50849250505092915050565b6000612be082613376565b80845260208401935083602082028501612bf9856132d4565b60005b84811015612c32578383038852612c14838351612d85565b9250612c1f8261343a565b9150602088019750600181019050612bfc565b508196508694505050505092915050565b6000612c4e82613381565b808452602084019350612c60836132e1565b60005b82811015612c9257612c76868351612dbb565b612c7f82613447565b9150602086019550600181019050612c63565b50849250505092915050565b6000612ca98261338c565b80845260208401935083602082028501612cc2856132ee565b60005b84811015612cfb578383038852612cdd838351612dca565b9250612ce882613454565b9150602088019750600181019050612cc5565b508196508694505050505092915050565b6000612d1782613397565b808452602084019350612d29836132fb565b60005b82811015612d5b57612d3f868351612e00565b612d4882613461565b9150602086019550600181019050612d2c565b50849250505092915050565b612d708161348e565b82525050565b612d7f8161349a565b82525050565b6000612d90826133a2565b808452612da4816020860160208601613511565b612dad81613544565b602085010191505092915050565b612dc4816134a4565b82525050565b6000612dd5826133ad565b808452612de9816020860160208601613511565b612df281613544565b602085010191505092915050565b612e09816134ae565b82525050565b60006020820190508181036000830152612e29818461281d565b905092915050565b60006020820190508181036000830152612e4b818461288b565b905092915050565b60006020820190508181036000830152612e6d81846128f9565b905092915050565b60006020820190508181036000830152612e8f8184612967565b905092915050565b60006020820190508181036000830152612eb181846129d5565b905092915050565b60006020820190508181036000830152612ed38184612a43565b905092915050565b60006020820190508181036000830152612ef58184612ab1565b905092915050565b600060e0820190508181036000830152612f17818a612ab1565b90508181036020830152612f2b81896129d5565b90508181036040830152612f3f818861288b565b90508181036060830152612f53818761281d565b90508181036080830152612f6781866128f9565b905081810360a0830152612f7b8185612a43565b905081810360c0830152612f8f8184612967565b905098975050505050505050565b6000604051905081810181811067ffffffffffffffff82111715612fc057600080fd5b8060405250919050565b600067ffffffffffffffff821115612fe157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561300957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561303157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561305957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561308157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156130a957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156130d157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156130f957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561312157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561314957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561317157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561319957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156131c157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156131e957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561321157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561323d57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561352f578082015181840152602081019050613514565b8381111561353e576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058207fa8ece86c8910fe3eff2498616e1ea19d33c7f43f15e76bcd9aa3daec5106076c6578706572696d656e74616cf50037";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getUint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBool\",\"outputs\":[{\"name\":\"\",\"type\":\"bool[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBS\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bytes[][]\"}],\"name\":\"setBS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_u\",\"type\":\"uint256[][]\"},{\"name\":\"_i\",\"type\":\"int256[][]\"},{\"name\":\"_b\",\"type\":\"bool[][]\"},{\"name\":\"_addr\",\"type\":\"address[][]\"},{\"name\":\"_bs32\",\"type\":\"bytes32[][]\"},{\"name\":\"_s\",\"type\":\"string[][]\"},{\"name\":\"_bs\",\"type\":\"bytes[][]\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInt\",\"outputs\":[{\"name\":\"\",\"type\":\"int256[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[][]\"},{\"name\":\"\",\"type\":\"int256[][]\"},{\"name\":\"\",\"type\":\"bool[][]\"},{\"name\":\"\",\"type\":\"address[][]\"},{\"name\":\"\",\"type\":\"bytes32[][]\"},{\"name\":\"\",\"type\":\"string[][]\"},{\"name\":\"\",\"type\":\"bytes[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBS32\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getString\",\"outputs\":[{\"name\":\"\",\"type\":\"string[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_u\",\"type\":\"uint256[][]\"}],\"name\":\"setUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bool[][]\"}],\"name\":\"setBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAddr\",\"outputs\":[{\"name\":\"\",\"type\":\"address[][]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_s\",\"type\":\"string[][]\"}],\"name\":\"setString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_addr\",\"type\":\"address[][]\"}],\"name\":\"setAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_i\",\"type\":\"int256[][]\"}],\"name\":\"setInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_b\",\"type\":\"bytes32[][]\"}],\"name\":\"setBS32\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"u\",\"type\":\"uint256[][]\"}],\"name\":\"EventUint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"i\",\"type\":\"int256[][]\"}],\"name\":\"EventInt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bool[][]\"}],\"name\":\"EventBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"addr\",\"type\":\"address[][]\"}],\"name\":\"EventAddr\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bytes32[][]\"}],\"name\":\"EventB32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string[][]\"}],\"name\":\"EventString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"b\",\"type\":\"bytes[][]\"}],\"name\":\"EchoEventBS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_u\",\"type\":\"uint256[][]\"},{\"indexed\":false,\"name\":\"_i\",\"type\":\"int256[][]\"},{\"indexed\":false,\"name\":\"_b\",\"type\":\"bool[][]\"},{\"indexed\":false,\"name\":\"_addr\",\"type\":\"address[][]\"},{\"indexed\":false,\"name\":\"_bs32\",\"type\":\"bytes32[][]\"},{\"indexed\":false,\"name\":\"_s\",\"type\":\"string[][]\"},{\"indexed\":false,\"name\":\"_bs\",\"type\":\"bytes[][]\"}],\"name\":\"Event\",\"type\":\"event\"}]";

    public static final String FUNC_GETUINT = "getUint";

    public static final String FUNC_GETBOOL = "getBool";

    public static final String FUNC_GETBS = "getBS";

    public static final String FUNC_SETBS = "setBS";

    public static final String FUNC_SET = "set";

    public static final String FUNC_GETINT = "getInt";

    public static final String FUNC_GET = "get";

    public static final String FUNC_GETBS32 = "getBS32";

    public static final String FUNC_GETSTRING = "getString";

    public static final String FUNC_SETUINT = "setUint";

    public static final String FUNC_SETBOOL = "setBool";

    public static final String FUNC_GETADDR = "getAddr";

    public static final String FUNC_SETSTRING = "setString";

    public static final String FUNC_SETADDR = "setAddr";

    public static final String FUNC_SETINT = "setInt";

    public static final String FUNC_SETBS32 = "setBS32";

    public static final Event EVENTUINT_EVENT = new Event("EventUint", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Uint256>>>() {}));
    ;

    public static final Event EVENTINT_EVENT = new Event("EventInt", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Int256>>>() {}));
    ;

    public static final Event EVENTBOOL_EVENT = new Event("EventBool", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Bool>>>() {}));
    ;

    public static final Event EVENTADDR_EVENT = new Event("EventAddr", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Address>>>() {}));
    ;

    public static final Event EVENTB32_EVENT = new Event("EventB32", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Bytes32>>>() {}));
    ;

    public static final Event EVENTSTRING_EVENT = new Event("EventString", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Utf8String>>>() {}));
    ;

    public static final Event ECHOEVENTBS_EVENT = new Event("EchoEventBS", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<DynamicBytes>>>() {}));
    ;

    public static final Event EVENT_EVENT = new Event("Event", 
            Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Uint256>>>() {}, new TypeReference<DynamicArray<DynamicArray<Int256>>>() {}, new TypeReference<DynamicArray<DynamicArray<Bool>>>() {}, new TypeReference<DynamicArray<DynamicArray<Address>>>() {}, new TypeReference<DynamicArray<DynamicArray<Bytes32>>>() {}, new TypeReference<DynamicArray<DynamicArray<Utf8String>>>() {}, new TypeReference<DynamicArray<DynamicArray<DynamicBytes>>>() {}));
    ;

    @Deprecated
    protected EchoArrayArray(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected EchoArrayArray(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected EchoArrayArray(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected EchoArrayArray(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<List> getUint() {
        final Function function = new Function(FUNC_GETUINT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Uint256>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getBool() {
        final Function function = new Function(FUNC_GETBOOL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Bool>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getBS() {
        final Function function = new Function(FUNC_GETBS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<DynamicBytes>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setBS(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBS(List<List<byte[]>> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setBSSeq(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> set(List<List<BigInteger>> _u, List<List<BigInteger>> _i, List<List<Boolean>> _b, List<List<String>> _addr, List<List<byte[]>> _bs32, List<List<String>> _s, List<List<byte[]>> _bs) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void set(List<List<BigInteger>> _u, List<List<BigInteger>> _i, List<List<Boolean>> _b, List<List<String>> _addr, List<List<byte[]>> _bs32, List<List<String>> _s, List<List<byte[]>> _bs, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setSeq(List<List<BigInteger>> _u, List<List<BigInteger>> _i, List<List<Boolean>> _b, List<List<String>> _addr, List<List<byte[]>> _bs32, List<List<String>> _s, List<List<byte[]>> _bs) {
        final Function function = new Function(
                FUNC_SET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Address.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs32, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_bs, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.DynamicBytes.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<List> getInt() {
        final Function function = new Function(FUNC_GETINT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Int256>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>> get() {
        final Function function = new Function(FUNC_GET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Uint256>>>() {}, new TypeReference<DynamicArray<DynamicArray<Int256>>>() {}, new TypeReference<DynamicArray<DynamicArray<Bool>>>() {}, new TypeReference<DynamicArray<DynamicArray<Address>>>() {}, new TypeReference<DynamicArray<DynamicArray<Bytes32>>>() {}, new TypeReference<DynamicArray<DynamicArray<Utf8String>>>() {}, new TypeReference<DynamicArray<DynamicArray<DynamicBytes>>>() {}));
        return new RemoteCall<Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>>(
                new Callable<Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>>() {
                    @Override
                    public Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<List<List<BigInteger>>, List<List<BigInteger>>, List<List<Boolean>>, List<List<String>>, List<List<byte[]>>, List<List<String>>, List<List<byte[]>>>(
                                convertToNative((List<DynamicArray<Uint256>>) results.get(0).getValue()), 
                                convertToNative((List<DynamicArray<Int256>>) results.get(1).getValue()), 
                                convertToNative((List<DynamicArray<Bool>>) results.get(2).getValue()), 
                                convertToNative((List<DynamicArray<Address>>) results.get(3).getValue()), 
                                convertToNative((List<DynamicArray<Bytes32>>) results.get(4).getValue()), 
                                convertToNative((List<DynamicArray<Utf8String>>) results.get(5).getValue()), 
                                convertToNative((List<DynamicArray<DynamicBytes>>) results.get(6).getValue()));
                    }
                });
    }

    public RemoteCall<List> getBS32() {
        final Function function = new Function(FUNC_GETBS32, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Bytes32>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<List> getString() {
        final Function function = new Function(FUNC_GETSTRING, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Utf8String>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setUint(List<List<BigInteger>> _u) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setUint(List<List<BigInteger>> _u, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setUintSeq(List<List<BigInteger>> _u) {
        final Function function = new Function(
                FUNC_SETUINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_u, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Uint256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setBool(List<List<Boolean>> _b) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBool(List<List<Boolean>> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setBoolSeq(List<List<Boolean>> _b) {
        final Function function = new Function(
                FUNC_SETBOOL, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Bool.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<List> getAddr() {
        final Function function = new Function(FUNC_GETADDR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<DynamicArray<Address>>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> setString(List<List<String>> _s) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setString(List<List<String>> _s, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setStringSeq(List<List<String>> _s) {
        final Function function = new Function(
                FUNC_SETSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_s, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setAddr(List<List<String>> _addr) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setAddr(List<List<String>> _addr, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setAddrSeq(List<List<String>> _addr) {
        final Function function = new Function(
                FUNC_SETADDR, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_addr, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.Address.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setInt(List<List<BigInteger>> _i) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setInt(List<List<BigInteger>> _i, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setIntSeq(List<List<BigInteger>> _i) {
        final Function function = new Function(
                FUNC_SETINT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_i, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Int256.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setBS32(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setBS32(List<List<byte[]>> _b, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setBS32Seq(List<List<byte[]>> _b) {
        final Function function = new Function(
                FUNC_SETBS32, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.DynamicArray(
                        org.fisco.bcos.web3j.abi.Utils.typeMap(_b, org.fisco.bcos.web3j.abi.datatypes.DynamicArray.class, org.fisco.bcos.web3j.abi.datatypes.generated.Bytes32.class))), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public List<EventUintEventResponse> getEventUintEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTUINT_EVENT, transactionReceipt);
        ArrayList<EventUintEventResponse> responses = new ArrayList<EventUintEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventUintEventResponse typedResponse = new EventUintEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventUintEventResponse> eventUintEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventUintEventResponse>() {
            @Override
            public EventUintEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTUINT_EVENT, log);
                EventUintEventResponse typedResponse = new EventUintEventResponse();
                typedResponse.log = log;
                typedResponse.u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventUintEventResponse> eventUintEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTUINT_EVENT));
        return eventUintEventFlowable(filter);
    }

    public List<EventIntEventResponse> getEventIntEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTINT_EVENT, transactionReceipt);
        ArrayList<EventIntEventResponse> responses = new ArrayList<EventIntEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventIntEventResponse typedResponse = new EventIntEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventIntEventResponse> eventIntEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventIntEventResponse>() {
            @Override
            public EventIntEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTINT_EVENT, log);
                EventIntEventResponse typedResponse = new EventIntEventResponse();
                typedResponse.log = log;
                typedResponse.i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventIntEventResponse> eventIntEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTINT_EVENT));
        return eventIntEventFlowable(filter);
    }

    public List<EventBoolEventResponse> getEventBoolEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTBOOL_EVENT, transactionReceipt);
        ArrayList<EventBoolEventResponse> responses = new ArrayList<EventBoolEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventBoolEventResponse typedResponse = new EventBoolEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventBoolEventResponse> eventBoolEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventBoolEventResponse>() {
            @Override
            public EventBoolEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTBOOL_EVENT, log);
                EventBoolEventResponse typedResponse = new EventBoolEventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventBoolEventResponse> eventBoolEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTBOOL_EVENT));
        return eventBoolEventFlowable(filter);
    }

    public List<EventAddrEventResponse> getEventAddrEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTADDR_EVENT, transactionReceipt);
        ArrayList<EventAddrEventResponse> responses = new ArrayList<EventAddrEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventAddrEventResponse typedResponse = new EventAddrEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.addr = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventAddrEventResponse> eventAddrEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventAddrEventResponse>() {
            @Override
            public EventAddrEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTADDR_EVENT, log);
                EventAddrEventResponse typedResponse = new EventAddrEventResponse();
                typedResponse.log = log;
                typedResponse.addr = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventAddrEventResponse> eventAddrEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTADDR_EVENT));
        return eventAddrEventFlowable(filter);
    }

    public List<EventB32EventResponse> getEventB32Events(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTB32_EVENT, transactionReceipt);
        ArrayList<EventB32EventResponse> responses = new ArrayList<EventB32EventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventB32EventResponse typedResponse = new EventB32EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventB32EventResponse> eventB32EventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventB32EventResponse>() {
            @Override
            public EventB32EventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTB32_EVENT, log);
                EventB32EventResponse typedResponse = new EventB32EventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventB32EventResponse> eventB32EventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTB32_EVENT));
        return eventB32EventFlowable(filter);
    }

    public List<EventStringEventResponse> getEventStringEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENTSTRING_EVENT, transactionReceipt);
        ArrayList<EventStringEventResponse> responses = new ArrayList<EventStringEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventStringEventResponse typedResponse = new EventStringEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.s = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventStringEventResponse> eventStringEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventStringEventResponse>() {
            @Override
            public EventStringEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENTSTRING_EVENT, log);
                EventStringEventResponse typedResponse = new EventStringEventResponse();
                typedResponse.log = log;
                typedResponse.s = (List<List<String>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventStringEventResponse> eventStringEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENTSTRING_EVENT));
        return eventStringEventFlowable(filter);
    }

    public List<EchoEventBSEventResponse> getEchoEventBSEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ECHOEVENTBS_EVENT, transactionReceipt);
        ArrayList<EchoEventBSEventResponse> responses = new ArrayList<EchoEventBSEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EchoEventBSEventResponse typedResponse = new EchoEventBSEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EchoEventBSEventResponse> echoEventBSEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EchoEventBSEventResponse>() {
            @Override
            public EchoEventBSEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ECHOEVENTBS_EVENT, log);
                EchoEventBSEventResponse typedResponse = new EchoEventBSEventResponse();
                typedResponse.log = log;
                typedResponse.b = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EchoEventBSEventResponse> echoEventBSEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ECHOEVENTBS_EVENT));
        return echoEventBSEventFlowable(filter);
    }

    public List<EventEventResponse> getEventEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(EVENT_EVENT, transactionReceipt);
        ArrayList<EventEventResponse> responses = new ArrayList<EventEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            EventEventResponse typedResponse = new EventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._addr = (List<List<String>>) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._bs32 = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse._s = (List<List<String>>) eventValues.getNonIndexedValues().get(5).getValue();
            typedResponse._bs = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(6).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<EventEventResponse> eventEventFlowable(BcosFilter filter) {
        return web3j.logFlowable(filter).map(new io.reactivex.functions.Function<Log, EventEventResponse>() {
            @Override
            public EventEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(EVENT_EVENT, log);
                EventEventResponse typedResponse = new EventEventResponse();
                typedResponse.log = log;
                typedResponse._u = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._i = (List<List<BigInteger>>) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._b = (List<List<Boolean>>) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._addr = (List<List<String>>) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._bs32 = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse._s = (List<List<String>>) eventValues.getNonIndexedValues().get(5).getValue();
                typedResponse._bs = (List<List<byte[]>>) eventValues.getNonIndexedValues().get(6).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<EventEventResponse> eventEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        BcosFilter filter = new BcosFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(EVENT_EVENT));
        return eventEventFlowable(filter);
    }

    @Deprecated
    public static EchoArrayArray load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new EchoArrayArray(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static EchoArrayArray load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new EchoArrayArray(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static EchoArrayArray load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new EchoArrayArray(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static EchoArrayArray load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new EchoArrayArray(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<EchoArrayArray> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EchoArrayArray.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EchoArrayArray> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EchoArrayArray.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<EchoArrayArray> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(EchoArrayArray.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<EchoArrayArray> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(EchoArrayArray.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class EventUintEventResponse {
        public Log log;

        public List<List<BigInteger>> u;
    }

    public static class EventIntEventResponse {
        public Log log;

        public List<List<BigInteger>> i;
    }

    public static class EventBoolEventResponse {
        public Log log;

        public List<List<Boolean>> b;
    }

    public static class EventAddrEventResponse {
        public Log log;

        public List<List<String>> addr;
    }

    public static class EventB32EventResponse {
        public Log log;

        public List<List<byte[]>> b;
    }

    public static class EventStringEventResponse {
        public Log log;

        public List<List<String>> s;
    }

    public static class EchoEventBSEventResponse {
        public Log log;

        public List<List<byte[]>> b;
    }

    public static class EventEventResponse {
        public Log log;

        public List<List<BigInteger>> _u;

        public List<List<BigInteger>> _i;

        public List<List<Boolean>> _b;

        public List<List<String>> _addr;

        public List<List<byte[]>> _bs32;

        public List<List<String>> _s;

        public List<List<byte[]>> _bs;
    }
}
